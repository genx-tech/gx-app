{"version":3,"file":"Runnable.js","names":["require","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","_","sleep_","eachAsync_","winston","winstonFlight","Logger","Runnable","T","constructor","name","options","logger","format","combine","colorize","simple","exitOnUncaught","appModulesPath","omit","exitOnError","err","waitForLogging","setTimeout","process","exit","log","clearTimeout","logError","warning","message","code","started","stop_","catch","runnable","start_","_initialize","on","_onExit","libModules","lib","removeListener","_uninitialize","getLib","libName","Error","libModule","requireFromLib","relativePath","registerLib","getService","pos","indexOf","substring","app","resetLogger","_injectLogger","_pwd","cwd","workingPath","chdir","_injectErrorHandlers","detach","_externalLogger","close","loggerOpt","cloneDeep","transports","createLogger","_onWarning","_onUncaughtException","ignoreUncaught","_getOnUncaughtException","module","exports"],"sources":["../src/Runnable.js"],"sourcesContent":["\"use strict\";\n\nconst { _, sleep_, eachAsync_ } = require('@genx/july');\n\nconst winston = require('winston');\nconst winstonFlight = require('winstonflight');\nconst Logger = require('winston/lib/winston/logger');\n\n/**\n * Runnable app mixin. \n * @param {object} T - Base class.     \n * @returns {Runnable} A runable app class.\n * @constructs Runnable(T)\n */\nconst Runnable = T => class extends T {\n    _getOnUncaughtException = exitOnError => err => {\n        if (exitOnError) {\n            //wait 1 second for flushing the last log\n            let waitForLogging = setTimeout(() => {\n                process.exit(1);\n            }, 1000);\n\n            this.log('error', err, () => {\n                clearTimeout(waitForLogging);\n                process.exit(1);\n            });\n        } else {\n            this.logError(err);\n        }\n    };        \n\n    _onWarning = warning => {\n        this.log('warn', warning.message);   \n    };\n\n    _onExit = code => {\n        if (this.started) {\n            this.stop_().catch(this.logError);\n        }           \n    };\n\n    /**                 \n     * @param {string} name - The name of the application.     \n     * @param {object} [options] - Application options     \n     * @property {object} [options.logger] - Logger options    \n     * @property {object} [options.ignoreUncaught=false] - Whether to skip the handling of uncaught exception\n     * @property {object} [options.exitOnUncaught=true] - Whether to exit process on uncaught exception thrown\n     * @constructs Runnable\n     */\n    constructor(name, options) {\n        super(name, {\n            logger: {\n                \"useMetaKey\": \"metadata\",\n                \"level\": \"info\",\n                \"transports\": [\n                    {\n                        \"type\": \"console\",\n                        \"options\": {                            \n                            \"format\": winston.format.combine(winston.format.colorize(), winston.format.simple())\n                        }\n                    }\n                ],\n                ...(options && options.logger)\n            },\n            exitOnUncaught: true,\n            appModulesPath: 'libs', \n            ..._.omit(options, ['logger'])\n        });        \n        \n        this.runnable = true;\n    }\n\n    /**\n     * Start the app     \n     * @returns {Promise}\n     * @memberof Runnable\n     */\n    async start_() {        \n        this._initialize();\n\n        process.on('exit', this._onExit);\n        \n        return super.start_();\n    }\n\n    /**\n     * Stop the app\n     * @returns {Promise}\n     * @memberof Runnable\n     */\n    async stop_() {\n        if (this.started) {            \n            if (this.libModules) {\n                await eachAsync_(this.libModules, lib => lib.stop_());\n                delete this.libModules;\n            }\n        }\n\n        process.removeListener('exit', this._onExit);\n\n        await super.stop_();\n\n        await sleep_(0);\n\n        this._uninitialize();\n    }\n\n    /**\n     * Get the lib module\n     * @param {string} libName \n     * @memberof Runnable\n     */\n    getLib(libName) {\n        if (!this.libModules) {\n            throw new Error('\"libModules\" feature is required to access lib among modules.');\n        }\n\n        let libModule = this.libModules[libName];\n        \n        if (!libModule) {\n            throw new Error(`Lib module [${libName}] not found.`);\n        }\n\n        return libModule;\n    }\n\n    /**\n     * Require a module from the source path of a library module\n     * @param {*} relativePath \n     * @memberof Runnable\n     */\n    requireFromLib(libName, relativePath) {\n        let libModule = this.getLib(libName);\n        return libModule.require(relativePath);\n    }\n\n    /**\n     * Register a loaded lib module\n     * @param {LibModule} lib \n     * @memberof Runnable\n     */\n    registerLib(lib) {\n        if (!this.libModules) {\n            this.libModules = {};\n        }\n\n        this.libModules[lib.name] = lib;\n    }\n\n    /**\n     * Get a registered service\n     * @param {string} name \n     * \n     * @example\n     *  // Get service from a lib module\n     *  const service = app.getService('<lib name>/<service name>');\n     *  // e.g const service = app.getService('data/mysql.mydb');\n     * @memberof Runnable\n     */\n     getService(name) {\n        let pos = name.indexOf('/');\n        if (pos === -1) {\n            return super.getService(name);\n        }\n\n        let lib = name.substring(0, pos);\n        name = name.substring(pos+1);\n\n        let app = this.getLib(lib);\n        return app && app.getService(name, true);\n    }\n\n    /**\n     * Reset logger. \n     * Use it only if the options.logger config is changed in runtime\n     * @memberof Runnable\n     */\n    resetLogger() {\n        this._injectLogger(true /** detach */);\n        this._injectLogger();\n    }\n\n    _initialize() {\n        this._pwd = process.cwd();\n        if (this.workingPath !== this._pwd) {                   \n            process.chdir(this.workingPath);\n        }      \n\n        this._injectLogger();\n        this._injectErrorHandlers(); \n    }\n\n    _uninitialize() {\n        const detach = true;\n        this._injectErrorHandlers(detach);       \n        this._injectLogger(detach);         \n\n        process.chdir(this._pwd);\n        delete this._pwd;\n    }\n\n    _injectLogger(detach) {\n        if (detach) {\n            this.log('verbose', 'Logger is detaching ...');\n\n            if (!this._externalLogger) {\n                this.logger.close();\n            }\n\n            delete this._externalLogger;\n            delete this.logger;\n            return;\n        }\n\n        if (this.options.logger instanceof Logger) {\n            this.logger = this.options.logger;\n            this._externalLogger = true;\n        } else {        \n            const loggerOpt = _.cloneDeep(this.options.logger)\n\n            if (loggerOpt.transports) {                \n                loggerOpt.transports = winstonFlight(winston, loggerOpt.transports);\n            }\n\n            this.logger = winston.createLogger(loggerOpt);   \n        }\n        \n        this.log('verbose', 'Logger injected.');            \n    }\n\n    _injectErrorHandlers(detach) {\n        if (detach) {            \n            process.removeListener('warning', this._onWarning);\n            if (this._onUncaughtException) {\n                process.removeListener('uncaughtException', this._onUncaughtException);\n                delete this._onUncaughtException;\n            }\n            this.log('verbose', 'Process-wide error handlers detached.');\n            return;\n        }\n\n        if (!this.options.ignoreUncaught) {\n            this._onUncaughtException = this._getOnUncaughtException(this.options.exitOnUncaught);\n            process.on('uncaughtException', this._onUncaughtException);     \n        }\n        \n        process.on('warning', this._onWarning);\n        this.log('verbose', 'Process-wide error handlers injected.');            \n    }\n};\n\nmodule.exports = Runnable;"],"mappings":"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"}