"use strict";const{_,getValueByPath}=require("rk-utils");const path=require("path");const spawn=require("child_process").spawn;exports.withProps=(Base,Props)=>class extends Base{constructor(...args){super(...args);Object.assign(this,Props)}};exports.dependsOn=function(features,app,fromFeature){let hasNotEnabled=_.find(_.castArray(features),feature=>!app.enabled(feature));if(hasNotEnabled){throw new Error(`"${fromFeature}" feature requires "${hasNotEnabled}" feature to be enabled.`)}};exports.tryRequire=function(packageName){function tryRequireBy(packageName,mainModule,throwWhenNotFound){try{return mainModule.require(packageName)}catch(error){if(error.code==="MODULE_NOT_FOUND"){if(throwWhenNotFound){let pkgPaths=packageName.split("/");let npmPkgName=pkgPaths[0];if(pkgPaths[0].startsWith("@")&&pkgPaths.length>1){npmPkgName+="/"+pkgPaths[1]}console.log(error.message);throw new Error(`Module "${packageName}" not found. Try run "npm install ${npmPkgName}" to install the dependency.`)}return undefined}throw error}}return tryRequireBy(packageName,module,require.main===module)||tryRequireBy(packageName,require.main,true)};exports.restart=function(envVariables){let processOptions={env:{...process.env,...envVariables},detached:true,stdio:"ignore"};let cp=spawn(process.argv[0],process.argv.slice(1),processOptions);cp.unref();process.exit(0)};exports.requireConfig=function(app,config,keys,prefix){const{InvalidConfiguration}=require("./Errors");keys.forEach(key=>{let value=getValueByPath(config,key);if(_.isNil(value)){throw new InvalidConfiguration(`Missing required config item "${key}".`,app,`${prefix}.${key}`)}})};exports.scriptBaseName=fileName=>path.basename(fileName,".js");