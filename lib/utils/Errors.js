"use strict";const{withProps}=require("./Helpers");class GeneralError extends Error{constructor(message,info,status,code){super(message);this.name=this.constructor.name;let typeOfInfo=typeof info;let typeOfStatus=typeof status;let typeOfCode=typeof code;if(typeOfCode==="undefined"){if(typeOfStatus==="string"){code=status;status=undefined;typeOfStatus="undefined"}}if(typeOfStatus==="undefined"){if(typeOfInfo==="number"){status=info;info=undefined}if(typeOfCode==="undefined"&&typeOfInfo==="string"){code=info;info=undefined}}this.info=info;this.status=status;this.code=code}}class ApplicationError extends GeneralError{constructor(message,info,code){super(message,info,500,code||"E_APP")}}class InvalidConfiguration extends ApplicationError{constructor(message,app,item){super(message,{app:app.name,configNode:item},"E_INVALID_CONF")}}class InvalidArgument extends ApplicationError{constructor(message,info){super(message,info,"E_INVALID_ARG")}}const ExposableError=withProps(GeneralError,{expose:true});exports.GeneralError=GeneralError;exports.ApplicationError=ApplicationError;exports.InvalidArgument=InvalidArgument;exports.InvalidConfiguration=InvalidConfiguration;exports.ExposableError=ExposableError;