{"version":3,"file":"ServiceContainer.js","names":["require","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","ConfigLoader","JsonConfigProvider","_","pushIntoBucket","eachAsync_","fs","tryRequire","_tryRequire","path","EventEmitter","winston","Feature","Literal","ServiceContainer","constructor","name","options","error","message","logException","assign","env","process","NODE_ENV","workingPath","resolve","cwd","configPath","toAbsolutePath","DEFAULT_CONFIG_PATH","configName","APP_CFG_NAME","start_","log","_featureRegistry","_getFeatureFallbackPath","features","services","loadConfigFromOptions","config","configLoader","disableEnvAwareConfig","join","createEnvAwareJsonLoader","loadConfig_","emit","isEmpty","Error","_loadFeatures_","started","stop_","emitAsync_","removeAllListeners","configVariables","_getConfigVariables","load_","args","length","pkgName","registerService","serviceObject","override","hasService","getService","enabled","feature","hasOwnProperty","addFeatureRegistry","registry","omit","level","rest","logger","summary","pick","replaceLogger","assert","_loggerBackup","_externalLoggerBackup","_externalLogger","processInfo","arch","argv","pid","platform","app","__dirname","FEATURES_PATH","featuresPath","event","asyncHandlers","Promise","all","configStageFeatures","forOwn","featureOptions","allowedFeatures","indexOf","_loadFeature","err","type","CONF","push","forEach","_loadFeatureGroup_","featureGroups","INIT","SERVICE","PLUGIN","READY","group","featureGroup","groupLevel","loaded","featureObject","featurePath","loadOption","Array","isArray","get","searchingPath","found","findLast","p","existsSync","validate","module","exports"],"sources":["../src/ServiceContainer.js"],"sourcesContent":["\"use strict\";\n\nconst ConfigLoader = require(\"@genx/config\");\nconst JsonConfigProvider = require(\"@genx/config/lib/JsonConfigProvider\");\nconst { _, pushIntoBucket, eachAsync_ } = require(\"@genx/july\");\nconst { fs, tryRequire: _tryRequire } = require(\"@genx/sys\");\nconst path = require(\"path\");\nconst EventEmitter = require(\"events\");\nconst winston = require(\"winston\");\n\nconst Feature = require(\"./enum/Feature\");\nconst Literal = require(\"./enum/Literal\");\n\n/**\n * Service container class.\n * @class\n * @extends EventEmitter\n */\nclass ServiceContainer extends EventEmitter {\n    logError = (error, message) => {\n        return this.logException(\"error\", error, message);\n    };\n\n    logErrorAsWarning = (error, message) => {\n        return this.logException(\"warn\", error, message);\n    };\n\n    /**\n     * @param {string} name - The name of the container instance.\n     * @param {object} [options] - Container options\n     * @property {string} [options.env] - Environment, default to process.env.NODE_ENV\n     * @property {string} [options.workingPath] - App's working path, default to process.cwd()\n     * @property {string} [options.configPath] - App's config path, default to \"conf\" under workingPath\n     * @property {string} [options.configName] - App's config basename, default to \"app\"\n     * @property {string} [options.disableEnvAwareConfig=false] - Don't use environment-aware config\n     * @property {array} [options.allowedFeatures] - A list of enabled feature names\n     * @property {boolean} [options.loadConfigFromOptions=false] - Whether to load config from passed-in options\n     * @property {object} [options.config] - Config in options, used only when loadConfigFromOptions\n     */\n    constructor(name, options) {\n        super();\n\n        /**\n         * Name of the app\n         * @member {object}\n         **/\n        this.name = name;\n\n        /**\n         * App options\n         * @member {object}\n         */\n        this.options = Object.assign(\n            {\n                //... default options\n            },\n            options\n        );\n\n        /**\n         * Environment flag\n         * @member {string}\n         */\n        this.env = this.options.env || process.env.NODE_ENV || \"development\";\n\n        /**\n         * Working directory of this cli app\n         * @member {string}\n         */\n        this.workingPath = this.options.workingPath ? path.resolve(this.options.workingPath) : process.cwd();\n\n        /**\n         * Config path\n         * @member {string}\n         */\n        this.configPath = this.toAbsolutePath(this.options.configPath || Literal.DEFAULT_CONFIG_PATH);\n\n        /**\n         * Config basename\n         * @member {string}\n         */\n        this.configName = this.options.configName || Literal.APP_CFG_NAME;\n    }\n\n    /**\n     * Start the container.\n     * @fires ServiceContainer#configLoaded\n     * @fires ServiceContainer#ready\n     * @returns {Promise.<ServiceContainer>}\n     */\n    async start_() {\n        this.log(\"verbose\", `Starting app [${this.name}] ...`);\n\n        this._featureRegistry = {\n            //firstly look up \"features\" under current working path, and then try the builtin features path\n            \"*\": this._getFeatureFallbackPath(),\n        };\n        /**\n         * Loaded features, name => feature object\n         * @member {object}\n         */\n        this.features = {};\n        /**\n         * Loaded services\n         * @member {object}\n         */\n        this.services = {};\n\n        if (this.options.loadConfigFromOptions) {\n            this.config = this.options.config;\n        } else {\n            /**\n             * Configuration loader instance\n             * @member {ConfigLoader}\n             */\n            this.configLoader = this.options.disableEnvAwareConfig\n                ? new ConfigLoader(new JsonConfigProvider(path.join(this.configPath, this.configName + \".json\")), this)\n                : ConfigLoader.createEnvAwareJsonLoader(this.configPath, this.configName, this.env, this);\n\n            await this.loadConfig_();\n        }\n\n        /**\n         * Config loaded event.\n         * @event ServiceContainer#configLoaded\n         */\n        this.emit(\"configLoaded\");\n\n        if (_.isEmpty(this.config)) {\n            throw Error(\"Empty configuration. Nothing to do! Config path: \" + this.configPath);\n        }\n\n        await this._loadFeatures_();\n\n        /**\n         * App ready\n         * @event ServiceContainer#ready\n         */\n        this.emit(\"ready\");\n\n        /**\n         * Flag showing the app is started or not.\n         * @member {bool}\n         */\n        this.started = true;\n\n        return this;\n    }\n\n    /**\n     * Stop the container\n     * @fires ServiceContainer#stopping\n     * @returns {Promise.<ServiceContainer>}\n     */\n    async stop_() {\n        /**\n         * App stopping\n         * @event ServiceContainer#stopping\n         */\n        await this.emitAsync_(\"stopping\");\n\n        this.log(\"verbose\", `Stopping app [${this.name}] ...`);\n\n        this.started = false;\n\n        delete this.services;\n        delete this.features;\n        delete this._featureRegistry;\n\n        delete this.config;\n        delete this.configLoader;\n\n        await this.emitAsync_(\"stopped\");\n\n        this.removeAllListeners();\n    }\n\n    /**\n     * @returns {ServiceContainer}\n     */\n    async loadConfig_() {\n        let configVariables = this._getConfigVariables();\n\n        /**\n         * App configuration\n         * @member {object}\n         */\n        this.config = await this.configLoader.load_(configVariables);\n\n        return this;\n    }\n\n    /**\n     * Translate a relative path of this app module to an absolute path\n     * @param {array} args - Array of path parts\n     * @returns {string}\n     */\n    toAbsolutePath(...args) {\n        if (args.length === 0 || args[0] == null) {\n            return this.workingPath;\n        }\n\n        return path.resolve(this.workingPath, ...args);\n    }\n\n    tryRequire(pkgName) {\n        return _tryRequire(pkgName, this.workingPath);\n    }\n\n    /**\n     * Register a service\n     * @param {string} name\n     * @param {object} serviceObject\n     * @param {boolean} override\n     */\n    registerService(name, serviceObject, override) {\n        if (name in this.services && !override) {\n            throw new Error('Service \"' + name + '\" already registered!');\n        }\n\n        this.services[name] = serviceObject;\n        this.log(\"verbose\", `Service \"${name}\" registered.`);\n        return this;\n    }\n\n    /**\n     * Check whether a service exists\n     * @param {*} name\n     * @returns {boolean}\n     */\n    hasService(name) {\n        return name in this.services;\n    }\n\n    /**\n     * Get a service from module hierarchy\n     * @param name\n     * @returns {object}\n     */\n    getService(name) {\n        return this.services[name];\n    }\n\n    /**\n     * Check whether a feature is enabled in the app.\n     * @param {string} feature\n     * @returns {bool}\n     */\n    enabled(feature) {\n        return this.features.hasOwnProperty(feature);\n    }\n\n    /**\n     * Add more or overide current feature registry\n     * @param {object} registry\n     */\n    addFeatureRegistry(registry) {\n        // * is used as the fallback location to find a feature\n        if (registry.hasOwnProperty(\"*\")) {\n            pushIntoBucket(this._featureRegistry, \"*\", registry[\"*\"]);\n        }\n\n        Object.assign(this._featureRegistry, _.omit(registry, [\"*\"]));\n    }\n\n    /**\n     * Default log method, may be override by loggers feature\n     * @param {string} - Log level\n     * @param {string} - Log message\n     * @param {...object} - Extra meta data\n     * @returns {ServiceContainer}\n     */\n    log(level, message, ...rest) {\n        this.logger && this.logger.log(level, message, ...rest);\n        return this;\n    }\n\n    /**\n     * Helper method to log an exception\n     * @param {*} level\n     * @param {*} error\n     * @param {*} summary\n     * @returns {ServiceContainer}\n     */\n    logException(level, error, summary) {\n        this.log(\n            level,\n            (summary ? summary + \"\\n\" : \"\") + error.message,\n            _.pick(error, [\"name\", \"status\", \"code\", \"info\", \"stack\", \"request\"])\n        );\n        return this;\n    }\n\n    /**\n     * Replace the default logger set on creation of the app.\n     * @param {Logger} logger\n     * @memberof ServiceContainer\n     */\n    replaceLogger(logger) {\n        if (logger) {\n            assert: !this._loggerBackup;\n\n            this._loggerBackup = this.logger;\n            this._externalLoggerBackup = this._externalLogger;\n\n            this.logger = logger;\n            this._externalLogger = true;\n\n            this.log(\"verbose\", \"A new app logger attached.\");\n        } else {\n            this.logger = this._loggerBackup;\n            this._externalLogger = this._externalLoggerBackup;\n\n            delete this._loggerBackup;\n            delete this._externalLoggerBackup;\n\n            this.log(\"verbose\", \"The current app logger is dettached.\");\n        }\n    }\n\n    _getConfigVariables() {\n        const processInfo = {\n            env: process.env,\n            arch: process.arch,\n            argv: process.argv,\n            cwd: process.cwd(),\n            pid: process.pid,\n            platform: process.platform,\n        };\n\n        return {\n            app: this,\n            log: winston,\n            env: this.env,\n            process: processInfo\n        };\n    }\n\n    _getFeatureFallbackPath() {\n        return [\n            path.resolve(__dirname, Literal.FEATURES_PATH),\n            this.options.featuresPath\n                ? this.toAbsolutePath(this.options.featuresPath)\n                : this.toAbsolutePath(Literal.FEATURES_PATH),\n        ];\n    }\n\n    async emitAsync_(event) {\n        let asyncHandlers = [];\n        this.emit(event, asyncHandlers);\n        if (asyncHandlers.length > 0) {\n            await Promise.all(asyncHandlers);\n        }\n    }\n\n    /**\n     * Load features\n     * @private\n     * @returns {bool}\n     */\n    async _loadFeatures_() {\n        // run config stage separately first\n        let configStageFeatures = [];\n\n        // load features\n        _.forOwn(this.config, (featureOptions, name) => {\n            if (this.options.allowedFeatures && this.options.allowedFeatures.indexOf(name) === -1) {\n                //skip disabled features\n                return;\n            }\n\n            let feature;\n            try {\n                feature = this._loadFeature(name);\n            } catch (err) {\n                //ignore the first trial                \n            }\n\n            if (feature && feature.type === Feature.CONF) {\n                configStageFeatures.push([name, feature.load_, featureOptions]);\n                delete this.config[name];\n            }\n        });\n\n        if (configStageFeatures.length > 0) {\n            //configuration features will be overrided by newly loaded config\n            configStageFeatures.forEach(([name]) => {\n                delete this.config[name];\n            });\n\n            await this._loadFeatureGroup_(configStageFeatures, Feature.CONF);\n\n            //reload all features if any type of configuration feature exists\n            return this._loadFeatures_();\n        }\n\n        let featureGroups = {\n            [Feature.INIT]: [],\n            [Feature.SERVICE]: [],\n            [Feature.PLUGIN]: [],\n            [Feature.READY]: [],\n        };\n\n        // load features\n        _.forOwn(this.config, (featureOptions, name) => {\n            if (this.options.allowedFeatures && this.options.allowedFeatures.indexOf(name) === -1) {\n                //skip disabled features\n                return;\n            }\n\n            let feature = this._loadFeature(name);\n\n            if (!(feature.type in featureGroups)) {\n                throw new Error(`Invalid feature type. Feature: ${name}, type: ${feature.type}`);\n            }\n\n            featureGroups[feature.type].push([name, feature.load_, featureOptions]);\n        });\n\n        return eachAsync_(featureGroups, (group, level) => this._loadFeatureGroup_(group, level));\n    }\n\n    async _loadFeatureGroup_(featureGroup, groupLevel) {\n        await this.emitAsync_(\"before:\" + groupLevel);\n        this.log(\"verbose\", `Loading \"${groupLevel}\" feature group ...`);\n\n        await eachAsync_(featureGroup, async ([name, load_, options]) => {\n            await this.emitAsync_(\"before:load:\" + name);\n            this.log(\"verbose\", `Loading feature \"${name}\" ...`);\n\n            await load_(this, options, name);\n            this.features[name].loaded = true;\n\n            this.log(\"verbose\", `Feature \"${name}\" loaded. [OK]`);\n\n            await this.emitAsync_(\"after:load:\" + name);\n        });\n        this.log(\"verbose\", `Finished loading \"${groupLevel}\" feature group. [OK]`);\n\n        await this.emitAsync_(\"after:\" + groupLevel);\n    }\n\n    /**\n     * Load a feature object by name.\n     * @private\n     * @param {string} feature\n     * @returns {object}\n     */\n    _loadFeature(feature) {\n        let featureObject = this.features[feature];\n        if (featureObject) return featureObject;\n\n        let featurePath;\n\n        if (this._featureRegistry.hasOwnProperty(feature)) {\n            //load by registry entry\n            let loadOption = this._featureRegistry[feature];\n\n            if (Array.isArray(loadOption)) {\n                if (loadOption.length === 0) {\n                    throw new Error(`Invalid registry value for feature \"${feature}\".`);\n                }\n\n                featurePath = loadOption[0];\n                featureObject = this.tryRequire(featurePath);\n\n                if (loadOption.length > 1) {\n                    //one module may contains more than one feature\n                    featureObject = _.get(featureObject, loadOption[1]);\n                }\n            } else {\n                featurePath = loadOption;\n                featureObject = this.tryRequire(featurePath);\n            }\n        } else {\n            //load by fallback paths\n            let searchingPath = this._featureRegistry[\"*\"];\n\n            //reverse fallback stack\n            let found = _.findLast(searchingPath, (p) => {\n                featurePath = path.join(p, feature + \".js\");\n                return fs.existsSync(featurePath);\n            });\n\n            if (!found) {\n                throw new Error(`Don't know where to load feature \"${feature}\".`);\n            }\n\n            featureObject = require(featurePath);\n        }\n\n        if (!Feature.validate(featureObject)) {\n            throw new Error(`Invalid feature object loaded from \"${featurePath}\".`);\n        }\n\n        this.features[feature] = featureObject;\n        return featureObject;\n    }\n}\n\nmodule.exports = ServiceContainer;\n"],"mappings":"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"}