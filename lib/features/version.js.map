{"version":3,"sources":["../../src/features/version.js"],"names":["fs","require","Feature","module","exports","type","INIT","load_","app","version","pkgFile","toAbsolutePath","exists","Error","workingPath","pkg","readJson"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAASC,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAAvB;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AAEb;AACJ;AACA;AACA;AACIC,EAAAA,IAAI,EAAEH,OAAO,CAACI,IAND;;AAQb;AACJ;AACA;AACA;AACA;AACA;AACIC,EAAAA,KAAK,EAAE,gBAAgBC,GAAhB,EAAqBC,OAArB,EAA8B;AACjC,QAAIA,OAAO,KAAK,kBAAhB,EAAoC;AAChC,UAAIC,OAAO,GAAGF,GAAG,CAACG,cAAJ,CAAmB,cAAnB,CAAd;;AACA,UAAI,EAAE,MAAMX,EAAE,CAACY,MAAH,CAAUF,OAAV,CAAR,CAAJ,EAAiC;AAC7B,cAAM,IAAIG,KAAJ,CAAU,yDAAyDL,GAAG,CAACM,WAAvE,CAAN;AACH;;AAED,UAAIC,GAAG,GAAG,MAAMf,EAAE,CAACgB,QAAH,CAAYN,OAAZ,CAAhB;AACAD,MAAAA,OAAO,GAAGM,GAAG,CAACN,OAAd;AACH;;AAEDD,IAAAA,GAAG,CAACC,OAAJ,GAAcA,OAAd;AACH;AA1BY,CAAjB","sourcesContent":["\"use strict\";\n\n/**\n * Set app version\n * @module Feature_Version\n */\n\nconst { fs } = require('@genx/sys');\nconst Feature = require('../enum/Feature');\n\nmodule.exports = {\n\n    /**\n     * This feature is loaded at init stage\n     * @member {string}\n     */\n    type: Feature.INIT,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {string} version - Version information, use @package.version to use the version info from package.json located under working folder\n     * @returns {Promise.<*>}\n     */\n    load_: async function (app, version) {\n        if (version === '@package.version') {\n            let pkgFile = app.toAbsolutePath('package.json');\n            if (!(await fs.exists(pkgFile))) {\n                throw new Error('\"package.json\" not found in working directory. CWD: ' + app.workingPath);\n            }\n\n            let pkg = await fs.readJson(pkgFile);\n            version = pkg.version;\n        } \n\n        app.version = version;\n    }\n};"],"file":"version.js"}