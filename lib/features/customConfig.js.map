{"version":3,"file":"customConfig.js","names":["require","path","Feature","JsonConfigProvider","module","exports","type","CONF","load_","app","configPath","configLoader","provider","resolve","loadConfig_"],"sources":["../../src/features/customConfig.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Enable custom config identified by config path.\n * @module Feature_CustomConfig\n */\n\nconst path = require('path');\nconst Feature = require('../enum/Feature');\n\nconst JsonConfigProvider = require('rk-config/lib/JsonConfigProvider');\n\nmodule.exports = {\n\n    /**\n     * This feature is loaded at configuration stage\n     * @member {string}\n     */\n    type: Feature.CONF,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {string} configPath - Custom config file path\n     * @returns {Promise.<*>}\n     */\n    load_: async (app, configPath) => {\n        app.configLoader.provider = new JsonConfigProvider(path.resolve(configPath));\n        return app.loadConfig_();\n    }\n};"],"mappings":"AAAA,YAAY,CAACA,OAAA,gCAOb,KAAM,CAAAC,IAAI,CAAGD,OAAO,CAAC,MAAM,CAAC,CAC5B,KAAM,CAAAE,OAAO,CAAGF,OAAO,CAAC,iBAAiB,CAAC,CAE1C,KAAM,CAAAG,kBAAkB,CAAGH,OAAO,CAAC,kCAAkC,CAAC,CAEtEI,MAAM,CAACC,OAAO,CAAG,CAMbC,IAAI,CAAEJ,OAAO,CAACK,IAAI,CAQlBC,KAAK,CAAE,KAAAA,CAAOC,GAAG,CAAEC,UAAU,GAAK,CAC9BD,GAAG,CAACE,YAAY,CAACC,QAAQ,CAAG,GAAI,CAAAT,kBAAkB,CAACF,IAAI,CAACY,OAAO,CAACH,UAAU,CAAC,CAAC,CAC5E,MAAO,CAAAD,GAAG,CAACK,WAAW,EAC1B,CACJ,CAAC"}