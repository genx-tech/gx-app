{"version":3,"file":"superTest.js","names":["URL","require","HttpClient","Feature","ensureFeatureName","HttpTestClient","constructor","agent","endpointOrOptions","initReq","httpMethod","url","urlObj","testUrl","path","hash","server","Error","module","exports","type","SERVICE","groupable","load_","app","settings","name","tryRequire","client","registerService"],"sources":["../../src/features/superTest.js"],"sourcesContent":["const URL = require('url');\n\nconst { HttpClient } = require('./httpClient');\nconst Feature = require(\"../enum/Feature\");\nconst { ensureFeatureName } = require(\"../utils/Helpers\");\n\n/**\n * Enable a named super rest client, for code coverage test only.\n * @module Feature_SuperTest\n */\n\n/**\n * Http test client.\n * @class\n */\nclass HttpTestClient extends HttpClient {\n    /**     \n     * @param {*} agent \n     * @param {*} endpointOrOptions\n     */\n    constructor(agent, endpointOrOptions) {\n        super(agent, endpointOrOptions); \n    }\n\n    /**\n     * Override the default initReq method of RestClient.\n     * @param {*} httpMethod \n     * @param {*} url \n     */\n    initReq(httpMethod, url) {\n        const urlObj = new URL(url);\n\n        const testUrl = urlObj.path;\n        if (urlObj.hash) {\n            testUrl += \"#\" + urlObj.hash;\n        }\n\n        if (!this.server) {\n            throw new Error('\"server\" is required before sending test request.');\n        }\n\n        return this.agent(this.server)[httpMethod](testUrl);\n    }\n}\n\nmodule.exports = {\n    /**\n     * This feature is loaded at init stage\n     * @member {string}\n     */\n    type: Feature.SERVICE,\n\n    /**\n     * This feature can be grouped by serviceGroup\n     * @member {boolean}\n     */\n    groupable: true,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {object} settings - Settings of rest clients\n     * @returns {Promise.<*>}\n     */\n    load_: async function (app, settings, name) {\n        ensureFeatureName(name);\n\n        const agent = app.tryRequire(\"supertest\");\n        \n        let client = new HttpTestClient(agent, settings);\n\n        app.registerService(name, client);\n    },\n};\n"],"mappings":"oDAAA,KAAM,CAAAA,GAAG,CAAGC,OAAO,CAAC,KAAK,CAAC,CAE1B,KAAM,CAAEC,UAAW,CAAC,CAAGD,OAAO,CAAC,cAAc,CAAC,CAC9C,KAAM,CAAAE,OAAO,CAAGF,OAAO,CAAC,iBAAiB,CAAC,CAC1C,KAAM,CAAEG,iBAAkB,CAAC,CAAGH,OAAO,CAAC,kBAAkB,CAAC,CAWzD,KAAM,CAAAI,cAAc,QAAS,CAAAH,UAAW,CAKpCI,WAAWA,CAACC,KAAK,CAAEC,iBAAiB,CAAE,CAClC,KAAK,CAACD,KAAK,CAAEC,iBAAiB,CAClC,CAOAC,OAAOA,CAACC,UAAU,CAAEC,GAAG,CAAE,CACrB,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAZ,GAAG,CAACW,GAAG,CAAC,CAE3B,KAAM,CAAAE,OAAO,CAAGD,MAAM,CAACE,IAAI,CAC3B,GAAIF,MAAM,CAACG,IAAI,CAAE,CACbF,OAAO,EAAI,GAAG,CAAGD,MAAM,CAACG,IAC5B,CAEA,GAAI,CAAC,IAAI,CAACC,MAAM,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,qDAAmD,CACvE,CAEA,MAAO,KAAI,CAACV,KAAK,CAAC,IAAI,CAACS,MAAM,CAAC,CAACN,UAAU,CAAC,CAACG,OAAO,CACtD,CACJ,CAEAK,MAAM,CAACC,OAAO,CAAG,CAKbC,IAAI,CAAEjB,OAAO,CAACkB,OAAO,CAMrBC,SAAS,CAAE,IAAI,CAQfC,KAAK,CAAE,cAAAA,CAAgBC,GAAG,CAAEC,QAAQ,CAAEC,IAAI,CAAE,CACxCtB,iBAAiB,CAACsB,IAAI,CAAC,CAEvB,KAAM,CAAAnB,KAAK,CAAGiB,GAAG,CAACG,UAAU,CAAC,WAAW,CAAC,CAEzC,GAAI,CAAAC,MAAM,CAAG,GAAI,CAAAvB,cAAc,CAACE,KAAK,CAAEkB,QAAQ,CAAC,CAEhDD,GAAG,CAACK,eAAe,CAACH,IAAI,CAAEE,MAAM,CACpC,CACJ,CAAC"}