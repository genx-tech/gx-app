{"version":3,"sources":["../../src/features/superTest.js"],"names":["URL","require","HttpClient","Feature","ensureFeatureName","HttpTestClient","constructor","agent","endpointOrOptions","initReq","httpMethod","url","urlObj","testUrl","path","hash","server","Error","module","exports","type","SERVICE","groupable","load_","app","settings","name","tryRequire","client","registerService"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAiBD,OAAO,CAAC,cAAD,CAA9B;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAwBH,OAAO,CAAC,kBAAD,CAArC;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACA,MAAMI,cAAN,SAA6BH,UAA7B,CAAwC;AACpC;AACJ;AACA;AACA;AACII,EAAAA,WAAW,CAACC,KAAD,EAAQC,iBAAR,EAA2B;AAClC,UAAMD,KAAN,EAAaC,iBAAb;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,OAAO,CAACC,UAAD,EAAaC,GAAb,EAAkB;AACrB,UAAMC,MAAM,GAAG,IAAIZ,GAAJ,CAAQW,GAAR,CAAf;AAEA,UAAME,OAAO,GAAGD,MAAM,CAACE,IAAvB;;AACA,QAAIF,MAAM,CAACG,IAAX,EAAiB;AACbF,MAAAA,OAAO,IAAI,MAAMD,MAAM,CAACG,IAAxB;AACH;;AAED,QAAI,CAAC,KAAKC,MAAV,EAAkB;AACd,YAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACH;;AAED,WAAO,KAAKV,KAAL,CAAW,KAAKS,MAAhB,EAAwBN,UAAxB,EAAoCG,OAApC,CAAP;AACH;;AA3BmC;;AA8BxCK,MAAM,CAACC,OAAP,GAAiB;AACb;AACJ;AACA;AACA;AACIC,EAAAA,IAAI,EAAEjB,OAAO,CAACkB,OALD;;AAOb;AACJ;AACA;AACA;AACIC,EAAAA,SAAS,EAAE,IAXE;;AAab;AACJ;AACA;AACA;AACA;AACA;AACIC,EAAAA,KAAK,EAAE,gBAAgBC,GAAhB,EAAqBC,QAArB,EAA+BC,IAA/B,EAAqC;AACxCtB,IAAAA,iBAAiB,CAACsB,IAAD,CAAjB;AAEA,UAAMnB,KAAK,GAAGiB,GAAG,CAACG,UAAJ,CAAe,WAAf,CAAd;AAEA,QAAIC,MAAM,GAAG,IAAIvB,cAAJ,CAAmBE,KAAnB,EAA0BkB,QAA1B,CAAb;AAEAD,IAAAA,GAAG,CAACK,eAAJ,CAAoBH,IAApB,EAA0BE,MAA1B;AACH;AA3BY,CAAjB","sourcesContent":["const URL = require('url');\n\nconst { HttpClient } = require('./httpClient');\nconst Feature = require(\"../enum/Feature\");\nconst { ensureFeatureName } = require(\"../utils/Helpers\");\n\n/**\n * Enable a named super rest client, for code coverage test only.\n * @module Feature_SuperTest\n */\n\n/**\n * Http test client.\n * @class\n */\nclass HttpTestClient extends HttpClient {\n    /**     \n     * @param {*} agent \n     * @param {*} endpointOrOptions\n     */\n    constructor(agent, endpointOrOptions) {\n        super(agent, endpointOrOptions); \n    }\n\n    /**\n     * Override the default initReq method of RestClient.\n     * @param {*} httpMethod \n     * @param {*} url \n     */\n    initReq(httpMethod, url) {\n        const urlObj = new URL(url);\n\n        const testUrl = urlObj.path;\n        if (urlObj.hash) {\n            testUrl += \"#\" + urlObj.hash;\n        }\n\n        if (!this.server) {\n            throw new Error('\"server\" is required before sending test request.');\n        }\n\n        return this.agent(this.server)[httpMethod](testUrl);\n    }\n}\n\nmodule.exports = {\n    /**\n     * This feature is loaded at init stage\n     * @member {string}\n     */\n    type: Feature.SERVICE,\n\n    /**\n     * This feature can be grouped by serviceGroup\n     * @member {boolean}\n     */\n    groupable: true,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {object} settings - Settings of rest clients\n     * @returns {Promise.<*>}\n     */\n    load_: async function (app, settings, name) {\n        ensureFeatureName(name);\n\n        const agent = app.tryRequire(\"supertest\");\n        \n        let client = new HttpTestClient(agent, settings);\n\n        app.registerService(name, client);\n    },\n};\n"],"file":"superTest.js"}