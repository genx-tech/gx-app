{"version":3,"file":"serviceGroup.js","names":["Feature","require","_","eachAsync_","module","exports","type","SERVICE","load_","app","services","instances","serviceName","feature","_loadFeature","serviceOptions","instanceName"],"sources":["../../src/features/serviceGroup.js"],"sourcesContent":["const Feature = require(\"../enum/Feature\");\nconst { _, eachAsync_ } = require(\"@genx/july\");\n\n/**\n * Enable a service group\n * @module Feature_ServiceGroup\n */\n\nmodule.exports = {\n    /**\n     * This feature is loaded at service stage\n     * @member {string}\n     */\n    type: Feature.SERVICE,\n\n    /**\n     * Load the feature\n     * @param {App} app - The app module object\n     * @param {object} services - Map of services from service registration to service instance options\n     * @returns {Promise.<*>}\n     *\n     * @example\n     *\n     * serviceGroup: { 's3DigitalOcean': { '<instanceName>': {  } }   }\n     */\n    load_: async function (app, services) {\n        await eachAsync_(services, async (instances, serviceName) => {\n            let feature = app._loadFeature(serviceName);\n            await eachAsync_(instances, (serviceOptions, instanceName) =>\n                feature.load_(app, serviceOptions, `${serviceName}-${instanceName}`)\n            );\n        });\n    },\n};\n"],"mappings":"oDAAA,KAAM,CAAAA,OAAO,CAAGC,OAAO,CAAC,iBAAiB,CAAC,CAC1C,KAAM,CAAEC,CAAC,CAAEC,UAAW,CAAC,CAAGF,OAAO,CAAC,YAAY,CAAC,CAO/CG,MAAM,CAACC,OAAO,CAAG,CAKbC,IAAI,CAAEN,OAAO,CAACO,OAAO,CAYrBC,KAAK,CAAE,cAAAA,CAAgBC,GAAG,CAAEC,QAAQ,CAAE,CAClC,KAAM,CAAAP,UAAU,CAACO,QAAQ,CAAE,MAAOC,SAAS,CAAEC,WAAW,GAAK,CACzD,GAAI,CAAAC,OAAO,CAAGJ,GAAG,CAACK,YAAY,CAACF,WAAW,CAAC,CAC3C,KAAM,CAAAT,UAAU,CAACQ,SAAS,CAAE,CAACI,cAAc,CAAEC,YAAY,GACrDH,OAAO,CAACL,KAAK,CAACC,GAAG,CAAEM,cAAc,CAAG,GAAEH,WAAY,IAAGI,YAAa,EAAC,CAAC,CAE5E,CAAC,CACL,CACJ,CAAC"}