{"version":3,"file":"appLogger.js","names":["require","InvalidConfiguration","Feature","module","exports","type","PLUGIN","load_","app","loggerName","logger","getService","replaceLogger","on"],"sources":["../../src/features/appLogger.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Replace the default app logger\n * @module Feature_AppLogger\n */\n\nconst { InvalidConfiguration } = require('@genx/error');\nconst Feature = require('../enum/Feature');\n\nmodule.exports = {\n\n    /**\n     * This feature is loaded at plugin stage\n     * @member {string}\n     */\n    type: Feature.PLUGIN,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {string} loggerName - The logger name     \n     */\n    load_: (app, loggerName) => {\n        let logger = app.getService('logger.' + loggerName);\n\n        if (!logger) {\n            throw new InvalidConfiguration(`Logger \"${loggerName}\" not found.`, app, 'appLogger');\n        }\n\n        app.replaceLogger(logger);\n\n        app.on('stopping', () => {\n            app.replaceLogger(/* back to original */);\n        }); \n    }\n};"],"mappings":"AAAA,YAAY,CAACA,OAAA,gCAOb,KAAM,CAAEC,oBAAqB,CAAC,CAAGD,OAAO,CAAC,aAAa,CAAC,CACvD,KAAM,CAAAE,OAAO,CAAGF,OAAO,CAAC,iBAAiB,CAAC,CAE1CG,MAAM,CAACC,OAAO,CAAG,CAMbC,IAAI,CAAEH,OAAO,CAACI,MAAM,CAOpBC,KAAK,CAAEA,CAACC,GAAG,CAAEC,UAAU,GAAK,CACxB,GAAI,CAAAC,MAAM,CAAGF,GAAG,CAACG,UAAU,CAAC,SAAS,CAAGF,UAAU,CAAC,CAEnD,GAAI,CAACC,MAAM,CAAE,CACT,KAAM,IAAI,CAAAT,oBAAoB,CAAE,WAAUQ,UAAW,cAAa,CAAED,GAAG,CAAE,WAAW,CACxF,CAEAA,GAAG,CAACI,aAAa,CAACF,MAAM,CAAC,CAEzBF,GAAG,CAACK,EAAE,CAAC,UAAU,CAAE,IAAM,CACrBL,GAAG,CAACI,aAAa,EACrB,CAAC,CACL,CACJ,CAAC"}