{"version":3,"sources":["../../src/features/appLogger.js"],"names":["InvalidConfiguration","require","Feature","module","exports","type","PLUGIN","load_","app","loggerName","logger","getService","replaceLogger","on"],"mappings":"AAAA;;;;AAOA,MAAM;AAAEA,EAAAA;AAAF,IAA2BC,OAAO,CAAC,aAAD,CAAxC;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAAvB;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AAMbC,EAAAA,IAAI,EAAEH,OAAO,CAACI,MAND;AAabC,EAAAA,KAAK,EAAE,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACxB,QAAIC,MAAM,GAAGF,GAAG,CAACG,UAAJ,CAAe,YAAYF,UAA3B,CAAb;;AAEA,QAAI,CAACC,MAAL,EAAa;AACT,YAAM,IAAIV,oBAAJ,CAA0B,WAAUS,UAAW,cAA/C,EAA8DD,GAA9D,EAAmE,WAAnE,CAAN;AACH;;AAEDA,IAAAA,GAAG,CAACI,aAAJ,CAAkBF,MAAlB;AAEAF,IAAAA,GAAG,CAACK,EAAJ,CAAO,UAAP,EAAmB,MAAM;AACrBL,MAAAA,GAAG,CAACI,aAAJ;AACH,KAFD;AAGH;AAzBY,CAAjB","sourcesContent":["\"use strict\";\n\n/**\n * Replace the default app logger\n * @module Feature_AppLogger\n */\n\nconst { InvalidConfiguration } = require('@genx/error');\nconst Feature = require('../enum/Feature');\n\nmodule.exports = {\n\n    /**\n     * This feature is loaded at plugin stage\n     * @member {string}\n     */\n    type: Feature.PLUGIN,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {string} loggerName - The logger name     \n     */\n    load_: (app, loggerName) => {\n        let logger = app.getService('logger.' + loggerName);\n\n        if (!logger) {\n            throw new InvalidConfiguration(`Logger \"${loggerName}\" not found.`, app, 'appLogger');\n        }\n\n        app.replaceLogger(logger);\n\n        app.on('stopping', () => {\n            app.replaceLogger(/* back to original */);\n        }); \n    }\n};"],"file":"appLogger.js"}