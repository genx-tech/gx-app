{"version":3,"sources":["../../src/features/httpClient.js"],"names":["_","url","urlUtil","require","Feature","ensureFeatureName","AllowedMethods","get","post","put","del","delete","upload","download","resToPath","parts","Array","isArray","map","res","encodeURIComponent","join","HttpClient","constructor","agent","endpointOrOptions","options","endpoint","initReq","httpMethod","do","method","path","query","body","toLowerCase","_options","Error","startsWith","req","onSend","timeout","headers","forOwn","v","k","set","withCredentials","send","formData","field","attach","fileField","fileName","onProgress","on","result","type","text","onSent","error","response","_responseError","JSON","parse","onError","resource","data","file","module","exports","SERVICE","groupable","load_","app","settings","name","tryRequire","client","registerService"],"mappings":"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","sourcesContent":["const { _, url: urlUtil } = require(\"@genx/july\");\nconst Feature = require(\"../enum/Feature\");\nconst { ensureFeatureName } = require(\"../utils/Helpers\");\n\n/**\n * Enable a http client as service\n * @module Feature_HttpClient\n */\n\nconst AllowedMethods = {\n    get: \"get\",\n    post: \"post\",\n    put: \"put\",\n    del: \"del\",\n    delete: \"del\",\n    upload: \"post\",\n    download: \"get\",\n};\n\nfunction resToPath(parts) {\n    return parts ? (Array.isArray(parts) ? parts.map((res) => encodeURIComponent(res)).join(\"/\") : parts) : \"\";\n}\n\n/**\n * HTTP client.\n * @class\n */\nclass HttpClient {\n    /**\n     *\n     * @param {*} endpoint\n     */\n    constructor(agent, endpointOrOptions) {\n        this.agent = agent;\n        this.options = typeof endpointOrOptions === \"string\" ? { endpoint: endpointOrOptions } : endpointOrOptions;\n    }\n\n    initReq(httpMethod, url) {\n        return this.agent[httpMethod](url);\n    }\n\n    /**\n     *\n     * @param {string} method\n     * @param {string} path\n     * @param {object} query\n     * @param {object} body\n     * @param {object} options - Request options\n     * @property {string} [options.httpMethod] - Specified the http method to override the method argument\n     * @property {string} [options.endpoint] - Specified the base endpoint for this request only\n     * @property {function} [options.onSend] - Specified the onSend hook for this request only\n     * @returns\n     */\n    async do(method, path, query, body, options) {\n        method = method.toLowerCase();\n        const _options = { ...this.options, ...options };\n\n        let httpMethod = _options.httpMethod ?? AllowedMethods[method];\n        if (!httpMethod) {\n            throw new Error(\"Invalid method: \" + method);\n        }\n\n        let url = path.startsWith(\"http:\") || path.startsWith(\"https:\") ? path : urlUtil.join(_options.endpoint, path);\n\n        let req = this.initReq(httpMethod, url);\n\n        if (this.onSend) {\n            this.onSend(req);\n        }\n\n        if (_options.onSend) {\n            _options.onSend(req);\n        }\n\n        if (_options.timeout) {\n            req.timeout(_options.timeout);\n        }\n\n        if (_options.headers) {\n            _.forOwn(_options.headers, (v, k) => {\n                req.set(k, v);\n            });\n        }\n\n        if (_options.withCredentials) {\n            req.withCredentials();\n        }\n\n        if (query) {\n            req.query(query);\n        }\n\n        if (method === \"download\") {\n            req.send(body);\n        } else if (method === \"upload\") {\n            if (_options.formData) {\n                _.forOwn(_options.formData, (v, k) => {\n                    req.field(k, v);\n                });\n            }\n            req.attach(_options.fileField ?? \"file\", body, _options.fileName);\n        } else {\n            req.send(body);\n        }\n\n        if (_options.onProgress) {\n            req.on(\"progress\", _options.onProgress);\n        }\n\n        try {\n            const res = await req;\n            const result = res.type.startsWith(\"text/\") ? res.text : res.body;\n\n            if (this.onSent) {\n                await this.onSent(url, result, res);\n            }\n\n            if (_options.onSent) {\n                await _options.onSent(url, result, res);\n            }\n\n            return result;\n        } catch (error) {\n            if (error.response && error.response.error) {\n                const _responseError = error.response.error;\n\n                if (error.response.type === \"application/json\") {\n                    _responseError.body = JSON.parse(error.response.text);\n                }\n\n                if (_options.onError) {\n                    return _options.onError(_responseError, error);\n                }\n\n                if (this.onError) {\n                    return this.onError(_responseError, error);\n                }\n\n                throw _responseError;\n            }\n\n            if (_options.onError) {\n                return _options.onError(error);\n            }\n\n            if (this.onError) {\n                return this.onError(error);\n            }\n\n            throw error;\n        }\n    }\n\n    async get(resource, query, options) {\n        return this.do(\"get\", resToPath(resource), query, null, options);\n    }\n\n    async post(resource, data, query, options) {\n        return this.do(\"post\", resToPath(resource), query, data, options);\n    }\n\n    async put(resource, data, query, options) {\n        return this.do(\"put\", resToPath(resource), query, data, options);\n    }\n\n    async del(resource, query, options) {\n        return this.do(\"del\", resToPath(resource), query, null, options);\n    }\n\n    async upload(resource, file, query, options) {\n        return this.do(\"upload\", resToPath(resource), query, file, options);\n    }\n\n    async download(resource, query, options) {\n        return this.do(\"download\", resToPath(resource), query, null, options);\n    }\n}\n\nmodule.exports = {\n    /**\n     * This feature is loaded at init stage\n     * @member {string}\n     */\n    type: Feature.SERVICE,\n\n    /**\n     * This feature can be grouped by serviceGroup\n     * @member {boolean}\n     */\n    groupable: true,\n\n    HttpClient,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {object} settings - Settings of rest clients\n     * @returns {Promise.<*>}\n     */\n    load_: async function (app, settings, name) {\n        ensureFeatureName(name);\n\n        const agent = app.tryRequire(\"superagent\").agent();\n\n        let client = new HttpClient(agent, settings);\n\n        app.registerService(name, client);\n    },\n};\n"],"file":"httpClient.js"}