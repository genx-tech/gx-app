{"version":3,"file":"configFromDataSource.js","names":["require","_","Feature","requireConfig","module","exports","type","CONF","load_","app","config","Connector","tryRequire","connector","createConnector","driver","connectionString","logger","server","cfgData","findOne_","entity","key","defaults","log","getConnectionStringWithoutCredential","end_"],"sources":["../../src/features/configFromDataSource.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Enable server specific config identified by host name.\n * @module Feature_ConfigByHostname\n */\n\nconst { _ } = require('@genx/july');\nconst Feature = require('../enum/Feature');\nconst { requireConfig } = require('../utils/Helpers');\n\nmodule.exports = {\n\n    /**\n     * This feature is loaded at configuration stage\n     * @member {string}\n     */\n    type: Feature.CONF,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {object} config - Config for the feature\n     * @property {string} [config.driver] - Data source driver\n     * @property {string} [config.connectionString] - Connection string\n     * @property {string} [config.entity] - Entity of the config\n     * @property {string} [config.key] - Query key of the config\n     * @returns {Promise.<*>}\n     */\n    load_: async (app, config) => {\n        requireConfig(app, config, ['driver', 'connectionString', 'entity', 'key'], 'configFromDataSource');\n\n        const { Connector } = app.tryRequire('@genx/data');        \n\n        let connector = Connector.createConnector(config.driver, config.connectionString, { logger: app.logger || app.server.logger });\n        \n        try {\n            let cfgData = await connector.findOne_(config.entity, config.key);\n\n            if (cfgData) {\n                app.config = _.defaults(cfgData, app.config);    \n            } else {\n                app.log('warn', `Feature \"configFromDataSource\" @ \"${connector.getConnectionStringWithoutCredential()}\" does not exist and this feature will be ignored.`);\n            }           \n\n        } finally {\n            await connector.end_();\n        }\n    }\n};"],"mappings":"AAAA,YAAY,CAACA,OAAA,gCAOb,KAAM,CAAEC,CAAE,CAAC,CAAGD,OAAO,CAAC,YAAY,CAAC,CACnC,KAAM,CAAAE,OAAO,CAAGF,OAAO,CAAC,iBAAiB,CAAC,CAC1C,KAAM,CAAEG,aAAc,CAAC,CAAGH,OAAO,CAAC,kBAAkB,CAAC,CAErDI,MAAM,CAACC,OAAO,CAAG,CAMbC,IAAI,CAAEJ,OAAO,CAACK,IAAI,CAYlBC,KAAK,CAAE,KAAAA,CAAOC,GAAG,CAAEC,MAAM,GAAK,CAC1BP,aAAa,CAACM,GAAG,CAAEC,MAAM,CAAE,CAAC,QAAQ,CAAE,kBAAkB,CAAE,QAAQ,CAAE,KAAK,CAAC,CAAE,sBAAsB,CAAC,CAEnG,KAAM,CAAEC,SAAU,CAAC,CAAGF,GAAG,CAACG,UAAU,CAAC,YAAY,CAAC,CAElD,GAAI,CAAAC,SAAS,CAAGF,SAAS,CAACG,eAAe,CAACJ,MAAM,CAACK,MAAM,CAAEL,MAAM,CAACM,gBAAgB,CAAE,CAAEC,MAAM,CAAER,GAAG,CAACQ,MAAM,EAAIR,GAAG,CAACS,MAAM,CAACD,MAAO,CAAC,CAAC,CAE9H,GAAI,CACA,GAAI,CAAAE,OAAO,CAAG,KAAM,CAAAN,SAAS,CAACO,QAAQ,CAACV,MAAM,CAACW,MAAM,CAAEX,MAAM,CAACY,GAAG,CAAC,CAEjE,GAAIH,OAAO,CAAE,CACTV,GAAG,CAACC,MAAM,CAAGT,CAAC,CAACsB,QAAQ,CAACJ,OAAO,CAAEV,GAAG,CAACC,MAAM,CAC/C,CAAC,IAAM,CACHD,GAAG,CAACe,GAAG,CAAC,MAAM,CAAG,qCAAoCX,SAAS,CAACY,oCAAoC,EAAG,oDAAmD,CAC7J,CAEJ,CAAC,OAAS,CACN,KAAM,CAAAZ,SAAS,CAACa,IAAI,EACxB,CACJ,CACJ,CAAC"}