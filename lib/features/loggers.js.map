{"version":3,"file":"loggers.js","names":["require","winston","winstonFlight","Feature","_","module","exports","type","SERVICE","load_","app","categories","loggers","Container","forOwn","loggerConfig","name","transports","logger","add","registerService","on","close"],"sources":["../../src/features/loggers.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Enable multi-categories logging by winston logger\n * @module Feature_Loggers\n */\n\nconst winston = require('winston');\nconst winstonFlight = require('winstonflight');\nconst Feature = require('../enum/Feature');\nconst { _ } = require('@genx/july');\n\n/*\n\n loggers: {\n     'category1': {\n         \"transports\": [\n            {\n                \"type\": \"console\",\n                \"options\": {                            \n                    \"format\": winston.format.combine(winston.format.colorize(), winston.format.simple())\n                }\n            },\n            {\n                \"type\": \"file\",\n                \"options\": {\n                    \"level\": \"info\",\n                    \"filename\": `${name || 'app'}.log`\n                }\n            }\n        ]\n     },\n     'category2': {\n         transports: [\n             {\n                \"type\": \"daily-rotate-file\",\n                \"options\": {\n                    \"level\": \"info\",\n                    \"filename\": \"category2-%DATE%.log\",\n                    \"datePattern\": \"YYYYMMDD\"\n                }\n            }\n         ]\n     }\n }\n\n */\n\nmodule.exports = {\n\n    /**\n     * This feature is loaded at service stage\n     * @member {string}\n     */\n    type: Feature.SERVICE,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {object} categories - Configuration for multi-categories\n     * @returns {Promise.<*>}\n     * @example\n     *  let loggers = app.getService('loggers');\n     *  let logger = loggers.get('category');\n     *  logger.log('info', 'information');\n     *  logger.log('warn', 'warning');\n     *\n     *  let logger = app.getService('logger.category1');\n     *  logger.log('error', 'error');\n     */\n    load_: function (app, categories) {\n        let loggers = new (winston.Container)();\n\n        _.forOwn(categories, (loggerConfig, name) => {\n            if (loggerConfig.transports) {\n                loggerConfig.transports = winstonFlight(winston, loggerConfig.transports);\n            }\n\n            let logger = loggers.add(name, loggerConfig);\n            \n            app.registerService('logger.' + name, logger);\n        });\n\n        app.registerService('loggers', loggers);\n\n        app.on('stopped', () => {\n            loggers.close();            \n        }); \n    }\n};"],"mappings":"AAAA,YAAY,CAACA,OAAA,gCAOb,KAAM,CAAAC,OAAO,CAAGD,OAAO,CAAC,SAAS,CAAC,CAClC,KAAM,CAAAE,aAAa,CAAGF,OAAO,CAAC,eAAe,CAAC,CAC9C,KAAM,CAAAG,OAAO,CAAGH,OAAO,CAAC,iBAAiB,CAAC,CAC1C,KAAM,CAAEI,CAAE,CAAC,CAAGJ,OAAO,CAAC,YAAY,CAAC,CAsCnCK,MAAM,CAACC,OAAO,CAAG,CAMbC,IAAI,CAAEJ,OAAO,CAACK,OAAO,CAgBrBC,KAAK,CAAE,QAAAA,CAAUC,GAAG,CAAEC,UAAU,CAAE,CAC9B,GAAI,CAAAC,OAAO,CAAG,GAAK,CAAAX,OAAO,CAACY,SAAY,CAEvCT,CAAC,CAACU,MAAM,CAACH,UAAU,CAAE,CAACI,YAAY,CAAEC,IAAI,GAAK,CACzC,GAAID,YAAY,CAACE,UAAU,CAAE,CACzBF,YAAY,CAACE,UAAU,CAAGf,aAAa,CAACD,OAAO,CAAEc,YAAY,CAACE,UAAU,CAC5E,CAEA,GAAI,CAAAC,MAAM,CAAGN,OAAO,CAACO,GAAG,CAACH,IAAI,CAAED,YAAY,CAAC,CAE5CL,GAAG,CAACU,eAAe,CAAC,SAAS,CAAGJ,IAAI,CAAEE,MAAM,CAChD,CAAC,CAAC,CAEFR,GAAG,CAACU,eAAe,CAAC,SAAS,CAAER,OAAO,CAAC,CAEvCF,GAAG,CAACW,EAAE,CAAC,SAAS,CAAE,IAAM,CACpBT,OAAO,CAACU,KAAK,EACjB,CAAC,CACL,CACJ,CAAC"}