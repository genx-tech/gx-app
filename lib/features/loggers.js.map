{"version":3,"sources":["../../src/features/loggers.js"],"names":["winston","require","winstonFlight","Feature","_","module","exports","type","SERVICE","load_","app","categories","loggers","Container","forOwn","loggerConfig","name","transports","logger","add","registerService","on","close"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,eAAD,CAA7B;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAQH,OAAO,CAAC,YAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB;AAEb;AACJ;AACA;AACA;AACIC,EAAAA,IAAI,EAAEJ,OAAO,CAACK,OAND;;AAQb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,KAAK,EAAE,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AAC9B,QAAIC,OAAO,GAAG,IAAKZ,OAAO,CAACa,SAAb,EAAd;;AAEAT,IAAAA,CAAC,CAACU,MAAF,CAASH,UAAT,EAAqB,CAACI,YAAD,EAAeC,IAAf,KAAwB;AACzC,UAAID,YAAY,CAACE,UAAjB,EAA6B;AACzBF,QAAAA,YAAY,CAACE,UAAb,GAA0Bf,aAAa,CAACF,OAAD,EAAUe,YAAY,CAACE,UAAvB,CAAvC;AACH;;AAED,UAAIC,MAAM,GAAGN,OAAO,CAACO,GAAR,CAAYH,IAAZ,EAAkBD,YAAlB,CAAb;AAEAL,MAAAA,GAAG,CAACU,eAAJ,CAAoB,YAAYJ,IAAhC,EAAsCE,MAAtC;AACH,KARD;;AAUAR,IAAAA,GAAG,CAACU,eAAJ,CAAoB,SAApB,EAA+BR,OAA/B;AAEAF,IAAAA,GAAG,CAACW,EAAJ,CAAO,SAAP,EAAkB,MAAM;AACpBT,MAAAA,OAAO,CAACU,KAAR;AACH,KAFD;AAGH;AAxCY,CAAjB","sourcesContent":["\"use strict\";\n\n/**\n * Enable multi-categories logging by winston logger\n * @module Feature_Loggers\n */\n\nconst winston = require('winston');\nconst winstonFlight = require('winstonflight');\nconst Feature = require('../enum/Feature');\nconst { _ } = require('@genx/july');\n\n/*\n\n loggers: {\n     'category1': {\n         \"transports\": [\n            {\n                \"type\": \"console\",\n                \"options\": {                            \n                    \"format\": winston.format.combine(winston.format.colorize(), winston.format.simple())\n                }\n            },\n            {\n                \"type\": \"file\",\n                \"options\": {\n                    \"level\": \"info\",\n                    \"filename\": `${name || 'app'}.log`\n                }\n            }\n        ]\n     },\n     'category2': {\n         transports: [\n             {\n                \"type\": \"daily-rotate-file\",\n                \"options\": {\n                    \"level\": \"info\",\n                    \"filename\": \"category2-%DATE%.log\",\n                    \"datePattern\": \"YYYYMMDD\"\n                }\n            }\n         ]\n     }\n }\n\n */\n\nmodule.exports = {\n\n    /**\n     * This feature is loaded at service stage\n     * @member {string}\n     */\n    type: Feature.SERVICE,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {object} categories - Configuration for multi-categories\n     * @returns {Promise.<*>}\n     * @example\n     *  let loggers = app.getService('loggers');\n     *  let logger = loggers.get('category');\n     *  logger.log('info', 'information');\n     *  logger.log('warn', 'warning');\n     *\n     *  let logger = app.getService('logger.category1');\n     *  logger.log('error', 'error');\n     */\n    load_: function (app, categories) {\n        let loggers = new (winston.Container)();\n\n        _.forOwn(categories, (loggerConfig, name) => {\n            if (loggerConfig.transports) {\n                loggerConfig.transports = winstonFlight(winston, loggerConfig.transports);\n            }\n\n            let logger = loggers.add(name, loggerConfig);\n            \n            app.registerService('logger.' + name, logger);\n        });\n\n        app.registerService('loggers', loggers);\n\n        app.on('stopped', () => {\n            loggers.close();            \n        }); \n    }\n};"],"file":"loggers.js"}