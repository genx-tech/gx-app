{"version":3,"file":"commandLine.js","names":["require","path","Feature","_","pushIntoBucket","eachAsync_","ApplicationError","InvalidConfiguration","translateMinimistOptions","opts","m","forOwn","detail","name","bool","set","default","alias","optionDecorator","length","gArgv","process","argv","slice","CommandLineArgumentError","constructor","message","nonOption","CommandLine","app","usage","parse","options","injectUsage","injects","_minimistOpts$boolean","_minimistOpts$string","minimist","tryRequire","minimistOpts","boolean","forEach","bn","string","sn","option","arg","args","index","findIndex","arguments","undefined","updateOption","value","each","a","valueOrFunctionCall_","functor","doFilter_","opt","argIndex","filter","argExist","inquire_","inquirer","doInquire_","item","prompt","then","answers","console","log","ans","assert","concat","prepareInquire_","argExists","inquire","type","q","promptMessage","desc","promptType","choicesProvider","choices","promptDefault","afterInquire","onArgumentExists","showArguments","isEmpty","argOpt","validate_","checkRequire_","required","errors","argNum","i","msg","showUsageOnError","push","showUsage","afterBanner","map","join","exit","processSilentModeArguments_","hasOwnProperty","silentModeDefault","getBanner","banner","getUsage","bannerShown","fmtArgs","program","basename","afterCommandLine","line","reduce","sum","toString","Array","isArray","choice","afterOptions","showBannar","module","exports","INIT","load_","usageOptions","commandLine","silentMode","nonValidationMode"],"sources":["../../src/features/commandLine.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Parse command line arguments using minimist and store the parsed object into app.argv, and add app.showUsage() helper function\n * @module Feature_CommandLine\n */\n\nconst path = require(\"path\");\nconst Feature = require(\"../enum/Feature\");\nconst { _, pushIntoBucket, eachAsync_ } = require(\"@genx/july\");\nconst { ApplicationError, InvalidConfiguration } = require(\"@genx/error\");\n\nfunction translateMinimistOptions(opts) {\n    let m = {};\n\n    _.forOwn(opts, (detail, name) => {\n        if (detail.bool) {\n            pushIntoBucket(m, \"boolean\", name);\n        } else {\n            pushIntoBucket(m, \"string\", name);\n        }\n\n        if (\"default\" in detail) {\n            _.set(m, `default.${name}`, detail.default);\n        }\n\n        if (detail.alias) {\n            _.set(m, `alias.${name}`, detail.alias);\n        }\n    });\n\n    return m;\n}\n\nfunction optionDecorator(name) {\n    return name.length == 1 ? \"-\" + name : \"--\" + name;\n}\n\nconst gArgv = process.argv.slice(2);\n\n/**\n * Error caused by command line arguments.\n * @class\n * @extends ApplicationError\n */\nclass CommandLineArgumentError extends ApplicationError {\n    /**\n     * @param {string} message - Error message\n     * @param {string} name - The related config item\n     * @param {boolean} nonOption - Whether it is an option\n     */\n    constructor(message, name, nonOption) {\n        super(message, \"E_CLI_INVALID_ARG\", { name, nonOption });\n    }\n}\n\n/**\n * Command line helper object.\n */\nclass CommandLine {\n    constructor(app, usage) {\n        this.app = app;\n        this.usage = usage;\n\n        this.parse(usage.options);\n    }\n\n    injectUsage(injects) {\n        this.injects = injects;\n    }\n\n    parse(options) {\n        const minimist = this.app.tryRequire(\"minimist\");\n        const minimistOpts = translateMinimistOptions(options);\n        this.argv = minimist(gArgv, minimistOpts);\n\n        // fix: non-default arg has default value\n        minimistOpts.boolean?.forEach(bn => {\n            if (!(bn in minimistOpts.default)) {\n                delete this.argv[bn];\n            }\n        });        \n\n        minimistOpts.string?.forEach(sn => {\n            if (!(sn in minimistOpts.default)) {\n                delete this.argv[sn];\n            }\n        });        \n    }\n\n    option(name) {\n        return this.argv[name];\n    }\n\n    arg(name) {\n        if (this.args[name]) return this.args[name];\n\n        let index = _.findIndex(this.usage.arguments, (arg) => arg.name === name);\n\n        if (index === -1 || this.argv._.length <= index) {\n            return undefined;\n        }\n\n        this.args || (this.args = {});\n        return (this.args[name] = this.argv._[index]);\n    }\n\n    updateOption(name, value) {\n        this.argv[name] = value;\n        let opts = this.usage.options[name];\n        if (opts.alias) {\n            _.each(opts.alias, (a) => {\n                this.argv[a] = value;\n            });\n        }\n    }\n\n    async valueOrFunctionCall_(functor) {\n        if (typeof functor === \"function\") {\n            return await functor(this);\n        }\n\n        return functor;\n    }\n\n    async doFilter_(name, opt, argIndex) {\n        if (opt.filter) {\n            if (typeof argIndex === \"undefined\") {\n                if (!(typeof opt.filter !== \"function\")) {\n                    throw new InvalidConfiguration(\n                        `The \"filter\" in the inquirer option for argument option \"${name}\" should be a function!`,\n                        this.app,\n                        `commandLine.options[${name}].filter`\n                    );\n                }\n\n                this.updateOption(name, await opt.filter(this.argv[name], this));\n            } else {\n                if (!(typeof opt.filter !== \"function\")) {\n                    throw new InvalidConfiguration(\n                        `The \"filter\" in the inquirer option for argument value \"${name}\" at position ${argIndex} should be a function!`,\n                        this.app,\n                        `commandLine.arguments[${argIndex}].filter`\n                    );\n                }\n\n                this.argv._[argIndex] = await opt.filter(this.argv._[argIndex], this);\n            }\n        }\n    };\n\n    argExist(name, argIndex) {\n        return typeof argIndex === \"undefined\" ? name in this.argv : this.argv._.length > argIndex;\n    }\n\n    async inquire_() {\n        const inquirer = this.app.tryRequire(\"inquirer\");\n\n        const doInquire_ = (item, argIndex) =>\n            inquirer.prompt([item]).then((answers) => {\n                console.log();\n\n                _.forOwn(answers, (ans, name) => {\n                    if (typeof argIndex === \"undefined\") {\n                        this.updateOption(name, ans);\n                    } else {\n                        assert: this.argv._.length === argIndex;\n\n                        this.argv._ = this.argv._.concat([ans]);\n                    }\n                });\n            });\n\n        const prepareInquire_ = async (opts, name, argIndex) => {\n            let argExists = this.argExist(name, argIndex);\n\n            if (\"inquire\" in opts && !argExists) {\n                //need inquire and the value not given through command line\n                let inquire = await this.valueOrFunctionCall_(opts.inquire);\n\n                if (inquire) {\n                    let type;\n                    let q = { name: name, message: opts.promptMessage || opts.desc };\n\n                    if (opts.promptType) {\n                        type = opts.promptType;\n                        if (type === \"list\" || type === \"rawList\" || type === \"checkbox\" || type === \"expand\") {\n                            if (!opts.choicesProvider) {\n                                throw new InvalidConfiguration(\n                                    typeof argIndex === \"undefined\"\n                                        ? `Missing \"choicesProvider\" in the inquirer option for argument option \"${name}\"!`\n                                        : `Missing \"choicesProvider\" in the inquirer option for argument value \"${name}\" at postion ${argIndex}!`,\n                                    this.app,\n                                    typeof argIndex === \"undefined\"\n                                        ? `commandLine.options[${name}].choicesProvider`\n                                        : `commandLine.arguments[${argIndex}].choicesProvider`\n                                );\n                            }\n\n                            q.choices = await this.valueOrFunctionCall_(opts.choicesProvider);\n                        }\n                    } else if (opts.bool) {\n                        type = \"confirm\";\n                    } else {\n                        type = \"input\";\n                    }\n\n                    q.type = type;\n\n                    if (\"promptDefault\" in opts) {\n                        q.default = await this.valueOrFunctionCall_(opts.promptDefault);\n                    }\n\n                    await doInquire_(q, argIndex);\n                    await this.doFilter_(name, opts, argIndex);\n\n                    if (opts.afterInquire) {\n                        await opts.afterInquire(this);\n                    }\n                }\n            } else if (argExists) {\n                await this.doFilter_(name, opts, argIndex);\n                if (opts.onArgumentExists) {\n                    await opts.onArgumentExists(this);\n                }\n            }\n\n            if ((await this.valueOrFunctionCall_(this.usage.showArguments)) && this.argExist(name, argIndex)) {\n                if (typeof argIndex === \"undefined\") {\n                    console.log(\"option\", name, `(${opts.desc})`, \":\", this.argv[name]);\n                } else {\n                    console.log(`<${name}>`, \":\", this.argv._[argIndex]);\n                }\n            }\n        };\n\n        if (!_.isEmpty(this.usage.arguments)) {\n            await eachAsync_(this.usage.arguments, async (argOpt, index) => {\n                let { name, ...opts } = argOpt;\n\n                return prepareInquire_(opts, name, index);\n            });\n        }\n\n        return (\n            _.isEmpty(this.usage.options) || eachAsync_(this.usage.options, (opts, name) => prepareInquire_(opts, name))\n        );\n    }\n\n    /**\n     * validate parsed and filled argument options.\n     */\n    async validate_() {\n        const checkRequire_ = (opts) => this.valueOrFunctionCall_(opts.required);\n\n        let errors = [];\n\n        if (!_.isEmpty(this.usage.arguments)) {\n            let argNum = this.argv._.length;\n\n            if (argNum < this.usage.arguments.length) {\n                let args = [];\n\n                let i = 0;\n\n                await eachAsync_(this.usage.arguments, async (arg) => {\n                    let required = await checkRequire_(arg);\n\n                    if (required) {\n                        if (i >= argNum) {\n                            let msg = `Missing required argument \"${arg.name}\"!`;\n\n                            if (this.usage.showUsageOnError) {\n                                errors.push(msg);\n                            } else {\n                                throw new CommandLineArgumentError(msg, arg.name, true);\n                            }\n                        } else {\n                            args.push(this.argv._[i++]);\n                        }\n                    }\n                });\n\n                this.argv._ = args;\n            }\n        }\n\n        this.usage.options &&\n            (await eachAsync_(this.usage.options, async (opts, name) => {\n                let required = await checkRequire_(opts);\n\n                if (required && !(name in this.argv)) {\n                    let msg = `Missing required argument option of \"${name}\"!`;\n\n                    if (this.usage.showUsageOnError) {\n                        errors.push(msg);\n                    } else {\n                        throw new CommandLineArgumentError(msg, name);\n                    }\n                }\n            }));\n\n        if (errors.length > 0) {\n            this.showUsage({\n                afterBanner: () => \"Error(s):\\n\" + errors.map((msg) => \" - \" + msg).join(\"\\n\") + \"\\n\\n\",\n            });\n\n            process.exit(1);\n        }\n    }\n\n    async processSilentModeArguments_() {\n        await eachAsync_(this.usage.arguments, async (arg, index) => {\n            if (this.argv._.length <= index) {\n                if (arg.hasOwnProperty(\"silentModeDefault\")) {\n                    for (let i = this.argv._.length; i < index; i++) {\n                        this.argv._.push(undefined);\n                    }\n\n                    this.argv._.push(await this.valueOrFunctionCall_(arg.silentModeDefault));\n                }\n            } else {\n                const { name, ...opts } = arg;\n                await this.doFilter_(name, opts, index);\n                if (opts.onArgumentExists) {\n                    await opts.onArgumentExists(this);\n                }\n            }\n        });\n\n        await eachAsync_(this.usage.options, async (opts, name) => {\n            if (this.argExist(name)) {\n                await this.doFilter_(name, opts);\n                if (opts.onArgumentExists) {\n                    await opts.onArgumentExists(this);\n                }\n            } else if (opts.hasOwnProperty(\"silentModeDefault\")) {\n                this.updateOption(name, await this.valueOrFunctionCall_(opts.silentModeDefault));\n            }\n        });\n    }\n\n    getBanner() {\n        if (this.usage.banner) {\n            let banner = \"\";\n\n            if (typeof this.usage.banner === \"function\") {\n                banner += this.usage.banner(this);\n            } else if (typeof this.usage.banner === \"string\") {\n                banner += this.usage.banner;\n            } else {\n                throw new InvalidConfiguration(\n                    \"Invalid banner value of commandLine feature.\",\n                    this.app,\n                    `commandLine.banner`\n                );\n            }\n\n            banner += \"\\n\";\n\n            return banner;\n        }\n\n        return undefined;\n    }\n\n    getUsage(injects) {\n        injects = { ...this.injects, ...injects };\n\n        let usage = \"\";\n\n        let banner = !this.bannerShown && this.getBanner();\n        if (banner) {\n            usage += banner + \"\\n\";\n        }\n\n        if (injects && injects.afterBanner) {\n            usage += injects.afterBanner();\n        }\n\n        let fmtArgs = \"\";\n        if (!_.isEmpty(this.usage.arguments)) {\n            fmtArgs =\n                \" \" + this.usage.arguments.map((arg) => (arg.required ? `<${arg.name}>` : `[${arg.name}]`)).join(\" \");\n        }\n\n        usage += `Usage: ${this.usage.program || path.basename(process.argv[1])}${fmtArgs} [options]\\n\\n`;\n\n        if (injects && injects.afterCommandLine) {\n            usage += injects.afterCommandLine();\n        }\n\n        if (!_.isEmpty(this.usage.options)) {\n            usage += `Options:\\n`;\n            _.forOwn(this.usage.options, (opts, name) => {\n                let line = \"  \" + optionDecorator(name);\n                if (opts.alias) {\n                    line += _.reduce(opts.alias, (sum, a) => sum + \", \" + optionDecorator(a), \"\");\n                }\n\n                line += \"\\n\";\n                line += \"    \" + opts.desc + \"\\n\";\n\n                if (\"default\" in opts) {\n                    line += \"    default: \" + opts.default.toString() + \"\\n\";\n                }\n\n                if (opts.required) {\n                    if (typeof opts.required === \"function\") {\n                        line += \"    conditional\\n\";\n                    } else {\n                        line += \"    required\\n\";\n                    }\n                }\n\n                if (opts.choicesProvider && Array.isArray(opts.choicesProvider)) {\n                    line += \"    available values:\\n\";\n                    opts.choicesProvider.forEach((choice) => {\n                        line += `        \"${choice.value}\": ${choice.name}\\n`;\n                    });\n                }\n\n                line += \"\\n\";\n\n                usage += line;\n            });\n        }\n\n        if (injects && injects.afterOptions) {\n            usage += injects.afterOptions();\n        }\n\n        return usage;\n    }\n\n    showBannar() {\n        let banner = this.getBanner();\n        if (banner) {\n            console.log(banner);\n            this.bannerShown = true;\n        }\n    }\n\n    showUsage(injects) {\n        console.log(this.getUsage(injects));\n    }\n}\n\nmodule.exports = {\n    /**\n     * This feature is loaded at initialization stage\n     * @member {string}\n     */\n    type: Feature.INIT,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {object} usageOptions - Options for the feature\n     * @property {string} [usageOptions.banner] - Banner message or banner generator function\n     * @property {string} [usageOptions.program] - Executable name\n     * @property {array} [usageOptions.arguments] - Command line arguments, identified by the position of appearance\n     * @property {object} [usageOptions.options] - Command line options\n     * @property {boolean|function} [usageOptions.silentMode] - Whether to run in silient mode, default false\n     * @property {boolean|function} [usageOptions.nonValidationMode] - Whether to run validation     \n     * @property {boolean} [usageOptions.showUsageOnError]\n     *\n     * @example\n     *   options: { [argumentKey]: {\n     *      desc, // {string} - description\n     *      alias, // {array.<string>} - alias array\n     *      bool, // {boolean} - whether it is a boolean value\n     *      default, // {*} - default value\n     *      inquire, // {boolean | function(cli).<boolean>} - whether to enable interactive query\n     *      promptMessage, // {string} - prompt message for query, will use desc if not set\n     *      promptType, // {string} - prompt type, can be one of [ input, number, confirm, list, rawlist, expand, checkbox, password, editor ]\n     *      promptDefault, // {* | function(cli).<*>} - default value appeared on query or a async function to return the default value\n     *      choicesProvider, // {array | function(cli).<array> | function.<function(string).<array>>} - required for prompt type list, rawlist, expand, checkbox\n     *      filter, // {function(argv, cli).<argv>} - filter to process the argument value\n     *      afterInquire, // {function} - after inquire hook,\n     *      onArgumentExists, // {function} - when argument exists,\n     *      silentModeDefault // {*} - default value when run in silient mode,\n     *   } }\n     *\n     * @returns {Promise.<*>}\n     */\n    load_: async (app, usageOptions) => {\n        app.commandLine = new CommandLine(app, usageOptions);\n\n        let silentMode = usageOptions.silentMode;\n\n        if (silentMode && typeof silentMode === \"function\") {\n            silentMode = silentMode(app.commandLine);\n        }\n\n        app.commandLine.silentMode = silentMode;\n\n        if (silentMode) {\n            await app.commandLine.processSilentModeArguments_();\n        } else {\n            app.commandLine.showBannar();\n            await app.commandLine.inquire_();\n        }\n\n        let nonValidationMode = usageOptions.nonValidationMode;\n\n        if (nonValidationMode && typeof nonValidationMode === \"function\") {\n            nonValidationMode = nonValidationMode(app.commandLine);\n        }\n\n        app.commandLine.nonValidationMode = nonValidationMode;\n\n        if (!nonValidationMode) {\n            await app.commandLine.validate_();\n        }\n    },\n};\n"],"mappings":"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"}