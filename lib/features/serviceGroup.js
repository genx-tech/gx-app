"use strict";

require("source-map-support/register");

const Feature = require("../enum/Feature");

const {
  _
} = require("@genx/july");

module.exports = {
  type: Feature.SERVICE,
  load_: async function (app, services) {
    const loadings = [];

    _.each(services, (instances, serviceName) => {
      let feature = app._loadFeature(serviceName);

      _.each(instances, (serviceOptions, instanceName) => {
        loadings.push(feature.load_(app, serviceOptions, `${serviceName}-${instanceName}`));
      });
    });

    await Promise.all(loadings);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mZWF0dXJlcy9zZXJ2aWNlR3JvdXAuanMiXSwibmFtZXMiOlsiRmVhdHVyZSIsInJlcXVpcmUiLCJfIiwibW9kdWxlIiwiZXhwb3J0cyIsInR5cGUiLCJTRVJWSUNFIiwibG9hZF8iLCJhcHAiLCJzZXJ2aWNlcyIsImxvYWRpbmdzIiwiZWFjaCIsImluc3RhbmNlcyIsInNlcnZpY2VOYW1lIiwiZmVhdHVyZSIsIl9sb2FkRmVhdHVyZSIsInNlcnZpY2VPcHRpb25zIiwiaW5zdGFuY2VOYW1lIiwicHVzaCIsIlByb21pc2UiLCJhbGwiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxpQkFBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBUUQsT0FBTyxDQUFDLFlBQUQsQ0FBckI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUtiQyxFQUFBQSxJQUFJLEVBQUVMLE9BQU8sQ0FBQ00sT0FMRDtBQWlCYkMsRUFBQUEsS0FBSyxFQUFFLGdCQUFnQkMsR0FBaEIsRUFBcUJDLFFBQXJCLEVBQStCO0FBQ2xDLFVBQU1DLFFBQVEsR0FBRyxFQUFqQjs7QUFFQVIsSUFBQUEsQ0FBQyxDQUFDUyxJQUFGLENBQU9GLFFBQVAsRUFBaUIsQ0FBQ0csU0FBRCxFQUFZQyxXQUFaLEtBQTRCO0FBQ3pDLFVBQUlDLE9BQU8sR0FBR04sR0FBRyxDQUFDTyxZQUFKLENBQWlCRixXQUFqQixDQUFkOztBQUNBWCxNQUFBQSxDQUFDLENBQUNTLElBQUYsQ0FBT0MsU0FBUCxFQUFrQixDQUFDSSxjQUFELEVBQWlCQyxZQUFqQixLQUFrQztBQUNoRFAsUUFBQUEsUUFBUSxDQUFDUSxJQUFULENBQ0lKLE9BQU8sQ0FDRlAsS0FETCxDQUNXQyxHQURYLEVBQ2dCUSxjQURoQixFQUNpQyxHQUFFSCxXQUFZLElBQUdJLFlBQWEsRUFEL0QsQ0FESjtBQUlILE9BTEQ7QUFNSCxLQVJEOztBQVVBLFVBQU1FLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVixRQUFaLENBQU47QUFDSDtBQS9CWSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEZlYXR1cmUgPSByZXF1aXJlKFwiLi4vZW51bS9GZWF0dXJlXCIpO1xuY29uc3QgeyBfIH0gPSByZXF1aXJlKFwiQGdlbngvanVseVwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgLyoqXG4gICAgICogVGhpcyBmZWF0dXJlIGlzIGxvYWRlZCBhdCBzZXJ2aWNlIHN0YWdlXG4gICAgICogQG1lbWJlciB7c3RyaW5nfVxuICAgICAqL1xuICAgIHR5cGU6IEZlYXR1cmUuU0VSVklDRSxcblxuICAgIC8qKlxuICAgICAqIExvYWQgdGhlIGZlYXR1cmVcbiAgICAgKiBAcGFyYW0ge0FwcH0gYXBwIC0gVGhlIGFwcCBtb2R1bGUgb2JqZWN0XG4gICAgICogQHBhcmFtIHtvYmplY3R9IHNlcnZpY2VzIC0gTWFwIG9mIHNlcnZpY2VzIGZyb20gc2VydmljZSByZWdpc3RyYXRpb24gdG8gc2VydmljZSBpbnN0YW5jZSBvcHRpb25zXG4gICAgICogQHJldHVybnMge1Byb21pc2UuPCo+fVxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIHNlcnZpY2VHcm91cDogeyAnczNEaWdpdGFsT2NlYW4nOiB7ICc8aW5zdGFuY2VOYW1lPic6IHsgIH0gfSAgIH1cbiAgICAgKi9cbiAgICBsb2FkXzogYXN5bmMgZnVuY3Rpb24gKGFwcCwgc2VydmljZXMpIHtcbiAgICAgICAgY29uc3QgbG9hZGluZ3MgPSBbXTtcblxuICAgICAgICBfLmVhY2goc2VydmljZXMsIChpbnN0YW5jZXMsIHNlcnZpY2VOYW1lKSA9PiB7XG4gICAgICAgICAgICBsZXQgZmVhdHVyZSA9IGFwcC5fbG9hZEZlYXR1cmUoc2VydmljZU5hbWUpO1xuICAgICAgICAgICAgXy5lYWNoKGluc3RhbmNlcywgKHNlcnZpY2VPcHRpb25zLCBpbnN0YW5jZU5hbWUpID0+IHtcbiAgICAgICAgICAgICAgICBsb2FkaW5ncy5wdXNoKFxuICAgICAgICAgICAgICAgICAgICBmZWF0dXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAubG9hZF8oYXBwLCBzZXJ2aWNlT3B0aW9ucywgYCR7c2VydmljZU5hbWV9LSR7aW5zdGFuY2VOYW1lfWApXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChsb2FkaW5ncyk7XG4gICAgfSxcbn07XG4iXX0=