{"version":3,"sources":["../../src/features/dataSource.js"],"names":["_","require","Feature","InvalidConfiguration","module","exports","type","SERVICE","load_","app","dataSources","Connector","tryRequire","loggerProxy","log","args","forOwn","dataSource","dbms","config","connectorName","serviceName","connection","connectionString","other","connectorService","createConnector","logger","registerService","on","elegantStoppers","push","end_"],"mappings":"AAAA;;;;AAOA,MAAM;AAAEA,EAAAA;AAAF,IAAQC,OAAO,CAAC,YAAD,CAArB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAA2BF,OAAO,CAAC,aAAD,CAAxC;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AAKbC,EAAAA,IAAI,EAAEJ,OAAO,CAACK,OALD;AAabC,EAAAA,KAAK,EAAE,OAAOC,GAAP,EAAYC,WAAZ,KAA4B;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAgBF,GAAG,CAACG,UAAJ,CAAe,YAAf,CAAtB;AAEA,UAAMC,WAAW,GAAG;AAChBC,MAAAA,GAAG,EAAE,CAAC,GAAGC,IAAJ,KAAaN,GAAG,CAACK,GAAJ,CAAQ,GAAGC,IAAX;AADF,KAApB;;AAIAf,IAAAA,CAAC,CAACgB,MAAF,CAASN,WAAT,EAAsB,CAACO,UAAD,EAAaC,IAAb,KAAsB;AACxClB,MAAAA,CAAC,CAACgB,MAAF,CAASC,UAAT,EAAqB,CAACE,MAAD,EAASC,aAAT,KAA2B;AAC5C,YAAIC,WAAW,GAAGH,IAAI,GAAG,GAAP,GAAaE,aAA/B;;AAEA,YAAI,CAACD,MAAM,CAACG,UAAZ,EAAwB;AACpB,gBAAM,IAAInB,oBAAJ,CACD,8CAA6CkB,WAAY,IADxD,EAEFZ,GAFE,EAGD,cAAaS,IAAK,IAAGE,aAAc,EAHlC,CAAN;AAKH;;AAED,YAAI;AAAEE,UAAAA,UAAU,EAAEC,gBAAd;AAAgC,aAAGC;AAAnC,YAA6CL,MAAjD;AAEA,YAAIM,gBAAgB,GAAGd,SAAS,CAACe,eAAV,CAA0BR,IAA1B,EAAgCK,gBAAhC,EAAkD;AAAEI,UAAAA,MAAM,EAAEd,WAAV;AAAuB,aAAGW;AAA1B,SAAlD,CAAvB;AACAf,QAAAA,GAAG,CAACmB,eAAJ,CAAoBP,WAApB,EAAiCI,gBAAjC;AAEAhB,QAAAA,GAAG,CAACoB,EAAJ,CAAO,UAAP,EAAoBC,eAAD,IAAqB;AACpCA,UAAAA,eAAe,CAACC,IAAhB,CAAqBN,gBAAgB,CAACO,IAAjB,EAArB;AACH,SAFD;AAGH,OAnBD;AAoBH,KArBD;AAsBH;AA1CY,CAAjB","sourcesContent":["\"use strict\";\n\n/**\n * Enable data source feature\n * @module Feature_DataSource\n */\n\nconst { _ } = require('@genx/july');\nconst Feature = require('../enum/Feature');\nconst { InvalidConfiguration } = require('@genx/error');\n\nmodule.exports = {\n    /**\n     * This feature is loaded at service stage\n     * @member {string}\n     */\n    type: Feature.SERVICE,\n\n    /**\n     * Load the feature\n     * @param {ServiceContainer} app - The app module object\n     * @param {object} dataSources - Datasource settings\n     * @returns {Promise.<*>}\n     */\n    load_: async (app, dataSources) => {\n        const { Connector } = app.tryRequire('@genx/data');\n\n        const loggerProxy = {\n            log: (...args) => app.log(...args)\n        };\n\n        _.forOwn(dataSources, (dataSource, dbms) => {\n            _.forOwn(dataSource, (config, connectorName) => {\n                let serviceName = dbms + '.' + connectorName;\n\n                if (!config.connection) {\n                    throw new InvalidConfiguration(\n                        `Missing connection config for data source \"${serviceName}\".`,\n                        app,\n                        `dataSource.${dbms}.${connectorName}`\n                    );\n                }\n                \n                let { connection: connectionString, ...other } = config;  \n                \n                let connectorService = Connector.createConnector(dbms, connectionString, { logger: loggerProxy, ...other });\n                app.registerService(serviceName, connectorService);\n\n                app.on('stopping', (elegantStoppers) => {\n                    elegantStoppers.push(connectorService.end_());\n                });\n            });            \n        });        \n    }\n};"],"file":"dataSource.js"}