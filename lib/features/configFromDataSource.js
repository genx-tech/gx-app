"use strict";const Feature=require("../enum/Feature");const{_}=require("rk-utils");module.exports={type:Feature.CONF,load_:async(app,config)=>{const{Connector}=tryRequire("@genx/data");["driver","connectionString","entity","key"].forEach(k=>{if(!(k in config)){throw new Error(`"${k}" is required for feature "configFromDataSource".`)}});let connector=Connector.createConnector(config.driver,config.connectionString,{logger:app.logger||app.server.logger});try{let cfgData=await connector.findOne_(config.entity,config.key);if(cfgData){app.config=_.defaults(cfgData,app.config)}else{app.log("warn",`Feature "configFromDataSource" @ "${connector.getConnectionStringWithoutCredential()}" does not exist and this feature will be ignored.`)}}finally{await connector.end_()}}};