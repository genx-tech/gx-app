{"version":3,"file":"settings.js","names":["require","Feature","InvalidConfiguration","_","KEY_ENV","KEY_STAGE","Stage","process","env","STAGE_ENV","module","exports","type","INIT","load_","app","settings","result","envSettings","stageSettings","forOwn","value","key","startsWith","envKey","substr","length","isPlainObject","stageKey","Object","assign"],"sources":["../../src/features/settings.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Enable customized settings\n * @module Feature_Settings\n */\n\nconst Feature = require('../enum/Feature');\nconst { InvalidConfiguration } = require('@genx/error');\nconst { _ } = require('@genx/july');\n\nconst KEY_ENV = 'env:';\nconst KEY_STAGE = 'stage:';\nconst Stage = process.env.STAGE_ENV;\n\nmodule.exports = {\n\n    /**\n     * This feature is loaded at init stage\n     * @member {string}\n     */\n    type: Feature.INIT,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {object} settings - Customized settings\n     * @returns {Promise.<*>}\n     */\n    load_: function (app, settings) {\n        let result = {}\n        let envSettings;\n        let stageSettings;\n        \n        _.forOwn(settings, (value, key) => {\n            if (key.startsWith(KEY_ENV)) {\n                let envKey = key.substr(KEY_ENV.length);\n                if (envKey === app.env) {\n                    envSettings = value;\n                    if (!_.isPlainObject(value)) {\n                        throw new InvalidConfiguration(\n                            'Invalid env settings',\n                            app,\n                            `settings.${key}`\n                        );\n                    }\n                }\n            } else if (Stage && key.startsWith(KEY_STAGE)) {\n                let stageKey = key.substr(KEY_ENV.length);\n                if (stageKey === Stage) {\n                    stageSettings = value;\n                    if (!_.isPlainObject(value)) {\n                        throw new InvalidConfiguration(\n                            'Invalid stage settings',\n                            app,\n                            `settings.${key}`\n                        );\n                    }\n                }\n            } else {\n                result[key] = value;\n            }\n        });\n\n        app.settings = Object.assign(result, envSettings, stageSettings);\n    }\n};"],"mappings":"AAAA,YAAY,CAACA,OAAA,gCAOb,KAAM,CAAAC,OAAO,CAAGD,OAAO,CAAC,iBAAiB,CAAC,CAC1C,KAAM,CAAEE,oBAAqB,CAAC,CAAGF,OAAO,CAAC,aAAa,CAAC,CACvD,KAAM,CAAEG,CAAE,CAAC,CAAGH,OAAO,CAAC,YAAY,CAAC,CAEnC,KAAM,CAAAI,OAAO,CAAG,MAAM,CACtB,KAAM,CAAAC,SAAS,CAAG,QAAQ,CAC1B,KAAM,CAAAC,KAAK,CAAGC,OAAO,CAACC,GAAG,CAACC,SAAS,CAEnCC,MAAM,CAACC,OAAO,CAAG,CAMbC,IAAI,CAAEX,OAAO,CAACY,IAAI,CAQlBC,KAAK,CAAE,QAAAA,CAAUC,GAAG,CAAEC,QAAQ,CAAE,CAC5B,GAAI,CAAAC,MAAM,CAAG,CAAC,CAAC,CACf,GAAI,CAAAC,WAAW,CACf,GAAI,CAAAC,aAAa,CAEjBhB,CAAC,CAACiB,MAAM,CAACJ,QAAQ,CAAE,CAACK,KAAK,CAAEC,GAAG,GAAK,CAC/B,GAAIA,GAAG,CAACC,UAAU,CAACnB,OAAO,CAAC,CAAE,CACzB,GAAI,CAAAoB,MAAM,CAAGF,GAAG,CAACG,MAAM,CAACrB,OAAO,CAACsB,MAAM,CAAC,CACvC,GAAIF,MAAM,GAAKT,GAAG,CAACP,GAAG,CAAE,CACpBU,WAAW,CAAGG,KAAK,CACnB,GAAI,CAAClB,CAAC,CAACwB,aAAa,CAACN,KAAK,CAAC,CAAE,CACzB,KAAM,IAAI,CAAAnB,oBAAoB,CAC1B,sBAAsB,CACtBa,GAAG,CACF,YAAWO,GAAI,EAAC,CAEzB,CACJ,CACJ,CAAC,IAAM,IAAIhB,KAAK,EAAIgB,GAAG,CAACC,UAAU,CAAClB,SAAS,CAAC,CAAE,CAC3C,GAAI,CAAAuB,QAAQ,CAAGN,GAAG,CAACG,MAAM,CAACrB,OAAO,CAACsB,MAAM,CAAC,CACzC,GAAIE,QAAQ,GAAKtB,KAAK,CAAE,CACpBa,aAAa,CAAGE,KAAK,CACrB,GAAI,CAAClB,CAAC,CAACwB,aAAa,CAACN,KAAK,CAAC,CAAE,CACzB,KAAM,IAAI,CAAAnB,oBAAoB,CAC1B,wBAAwB,CACxBa,GAAG,CACF,YAAWO,GAAI,EAAC,CAEzB,CACJ,CACJ,CAAC,IAAM,CACHL,MAAM,CAACK,GAAG,CAAC,CAAGD,KAClB,CACJ,CAAC,CAAC,CAEFN,GAAG,CAACC,QAAQ,CAAGa,MAAM,CAACC,MAAM,CAACb,MAAM,CAAEC,WAAW,CAAEC,aAAa,CACnE,CACJ,CAAC"}