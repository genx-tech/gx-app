{"version":3,"file":"restClient.js","names":["Feature","require","ensureFeatureName","HttpClient","module","exports","type","SERVICE","groupable","RestClient","load_","app","settings","name","agent","tryRequire","client","registerService"],"sources":["../../src/features/restClient.js"],"sourcesContent":["const Feature = require(\"../enum/Feature\");\nconst { ensureFeatureName } = require(\"../utils/Helpers\");\n\nconst { HttpClient } = require('./httpClient');\n\n// backward compatible, use httpClient feature instead \n\nmodule.exports = {\n    /**\n     * This feature is loaded at init stage\n     * @member {string}\n     */\n    type: Feature.SERVICE,\n\n    /**\n     * This feature can be grouped by serviceGroup\n     * @member {boolean}\n     */\n    groupable: true,\n\n    RestClient: HttpClient,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {object} settings - Settings of rest clients\n     * @returns {Promise.<*>}\n     */\n    load_: async function (app, settings, name) {\n        ensureFeatureName(name);\n\n        const agent = app.tryRequire(\"superagent\").agent();\n\n        let client = new HttpClient(agent, settings);\n\n        app.registerService(name, client);        \n    },\n};\n"],"mappings":"oDAAA,KAAM,CAAAA,OAAO,CAAGC,OAAO,CAAC,iBAAiB,CAAC,CAC1C,KAAM,CAAEC,iBAAkB,CAAC,CAAGD,OAAO,CAAC,kBAAkB,CAAC,CAEzD,KAAM,CAAEE,UAAW,CAAC,CAAGF,OAAO,CAAC,cAAc,CAAC,CAI9CG,MAAM,CAACC,OAAO,CAAG,CAKbC,IAAI,CAAEN,OAAO,CAACO,OAAO,CAMrBC,SAAS,CAAE,IAAI,CAEfC,UAAU,CAAEN,UAAU,CAQtBO,KAAK,CAAE,cAAAA,CAAgBC,GAAG,CAAEC,QAAQ,CAAEC,IAAI,CAAE,CACxCX,iBAAiB,CAACW,IAAI,CAAC,CAEvB,KAAM,CAAAC,KAAK,CAAGH,GAAG,CAACI,UAAU,CAAC,YAAY,CAAC,CAACD,KAAK,EAAE,CAElD,GAAI,CAAAE,MAAM,CAAG,GAAI,CAAAb,UAAU,CAACW,KAAK,CAAEF,QAAQ,CAAC,CAE5CD,GAAG,CAACM,eAAe,CAACJ,IAAI,CAAEG,MAAM,CACpC,CACJ,CAAC"}