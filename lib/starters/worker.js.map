{"version":3,"sources":["../../src/starters/worker.js"],"names":["startWorker","worker","options","workerName","dontStop","initializer","uninitializer","throwOnError","appOptions","App","require","app","start_","result","stop_","error","console","process","exit","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeA,WAAf,CAA2BC,MAA3B,EAAmCC,OAAnC,EAA4C;AACxC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,WAAxB;AAAqCC,IAAAA,aAArC;AAAoDC,IAAAA,YAApD;AAAkE,OAAGC;AAArE,MAAqFN,OAAO,IAAI,EAAtG;;AAEA,QAAMO,GAAG,GAAGC,OAAO,CAAC,IAAD,CAAnB,CAHwC,CAKxC;;;AACA,MAAIC,GAAG,GAAG,IAAIF,GAAJ,CAAQN,UAAU,IAAI,QAAtB,EAAgCK,UAAhC,CAAV;;AAEA,MAAI;AACA,UAAMG,GAAG,CAACC,MAAJ,EAAN;;AAEA,QAAIP,WAAJ,EAAiB;AACb,YAAMA,WAAW,CAACM,GAAD,CAAjB;AACH;;AAED,UAAME,MAAM,GAAG,MAAMZ,MAAM,CAACU,GAAD,CAA3B;;AAEA,QAAI,CAACP,QAAL,EAAe;AACX,YAAMO,GAAG,CAACG,KAAJ,EAAN;AACH;;AAED,QAAIR,aAAJ,EAAmB;AACf,YAAMA,aAAa,EAAnB;AACH;;AAED,WAAOO,MAAP;AACH,GAlBD,CAkBE,OAAOE,KAAP,EAAc;AACZ,QAAIR,YAAJ,EAAkB;AACd,YAAMQ,KAAN;AACH;;AAEDC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAE,IAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACH;AACJ;;AAEDC,MAAM,CAACC,OAAP,GAAiBpB,WAAjB","sourcesContent":["/**\n * Start a worker app\n * @param {Function} worker \n * @param {object} [workerOptions] \n * @property {string} [workerOptions.workerName]\n * @property {boolean} [workerOptions.dontStop] - Don't stop after worker done \n * @property {Function} [workerOptions.initializer] \n */\nasync function startWorker(worker, options) {\n    const { workerName, dontStop, initializer, uninitializer, throwOnError, ...appOptions } = (options || {});\n\n    const App = require('..');\n\n    // create an app instance with custom configuration\n    let app = new App(workerName || 'worker', appOptions);\n\n    try {\n        await app.start_();\n    \n        if (initializer) {\n            await initializer(app);\n        }    \n        \n        const result = await worker(app);\n        \n        if (!dontStop) {\n            await app.stop_();\n        }\n\n        if (uninitializer) {\n            await uninitializer();\n        }\n\n        return result;\n    } catch (error) {\n        if (throwOnError) {\n            throw error;\n        }\n        \n        console.error(error);\n        process.exit(1);\n    } \n}\n\nmodule.exports = startWorker;"],"file":"worker.js"}