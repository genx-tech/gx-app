{"version":3,"file":"queueWorker.js","names":["require","startWorker","startQueueWorker","worker","queueService","queueName","options","workerName","workerOptions","app","messageQueue","getService","log","workerConsume_","channel","msg","info","content","JSON","parse","toString","error","ack","$mock","raw","then","shouldAck","nack","catch","message","stack","needRetry","dontStop","module","exports"],"sources":["../../src/starters/queueWorker.js"],"sourcesContent":["\"use strict\";\n\nconst startWorker = require('./worker');\n\n/**\n * Start a message queue worker.\n * @param {Function} worker  \n * @param {*} queueService \n * @param {*} queueName  \n * @param {object} options \n */\nasync function startQueueWorker(worker, queueService, queueName, options) {    \n    let { workerName, ...workerOptions } = options;\n\n    if (!workerName) {\n        workerName = queueName + 'Worker';\n    }  \n\n    return startWorker(async (app) => {\n        let messageQueue = app.getService(queueService);\n\n        app.log('info', `A queue worker is started and waiting for message on queue \"${queueName}\" ...`);\n\n        await messageQueue.workerConsume_(queueName, (channel, msg) => {            \n            let info = msg && msg.content;\n\n            try {\n                info = info && JSON.parse(info.toString());\n            } catch (error) {\n                app.log('error', 'The incoming message is not a valid JSON string.');\n                channel.ack(msg);  \n                return;\n            }\n\n            if (info && info.$mock) {\n                app.log('info', 'A mock message is received.\\nMessage: ' + raw);\n                channel.ack(msg);  \n                return;\n            }\n\n            worker(app, info).then(shouldAck => {\n                if (shouldAck) {                    \n                    channel.ack(msg);  \n                } else {\n                    channel.nack(msg);  \n                }                    \n            }).catch(error => {\n                app.log('error', error.message, { ...error.info, stack: error.stack });\n\n                if (error.needRetry) {\n                    channel.nack(msg);  \n                } else {\n                    channel.ack(msg);\n                } \n            });            \n        });\n\n    }, { ...workerOptions, workerName, dontStop: true });\n}\n\nmodule.exports = startQueueWorker;"],"mappings":"AAAA,YAAY,CAACA,OAAA,gCAEb,KAAM,CAAAC,WAAW,CAAGD,OAAO,CAAC,UAAU,CAAC,CASvC,cAAe,CAAAE,gBAAgBA,CAACC,MAAM,CAAEC,YAAY,CAAEC,SAAS,CAAEC,OAAO,CAAE,CACtE,GAAI,CAAEC,UAAU,CAAE,GAAGC,aAAc,CAAC,CAAGF,OAAO,CAE9C,GAAI,CAACC,UAAU,CAAE,CACbA,UAAU,CAAGF,SAAS,CAAG,QAC7B,CAEA,MAAO,CAAAJ,WAAW,CAAC,KAAO,CAAAQ,GAAG,EAAK,CAC9B,GAAI,CAAAC,YAAY,CAAGD,GAAG,CAACE,UAAU,CAACP,YAAY,CAAC,CAE/CK,GAAG,CAACG,GAAG,CAAC,MAAM,CAAG,+DAA8DP,SAAU,OAAM,CAAC,CAEhG,KAAM,CAAAK,YAAY,CAACG,cAAc,CAACR,SAAS,CAAE,CAACS,OAAO,CAAEC,GAAG,GAAK,CAC3D,GAAI,CAAAC,IAAI,CAAGD,GAAG,EAAIA,GAAG,CAACE,OAAO,CAE7B,GAAI,CACAD,IAAI,CAAGA,IAAI,EAAIE,IAAI,CAACC,KAAK,CAACH,IAAI,CAACI,QAAQ,EAAE,CAC7C,CAAE,MAAOC,KAAK,CAAE,CACZZ,GAAG,CAACG,GAAG,CAAC,OAAO,CAAE,kDAAkD,CAAC,CACpEE,OAAO,CAACQ,GAAG,CAACP,GAAG,CAAC,CAChB,MACJ,CAEA,GAAIC,IAAI,EAAIA,IAAI,CAACO,KAAK,CAAE,CACpBd,GAAG,CAACG,GAAG,CAAC,MAAM,CAAE,wCAAwC,CAAGY,GAAG,CAAC,CAC/DV,OAAO,CAACQ,GAAG,CAACP,GAAG,CAAC,CAChB,MACJ,CAEAZ,MAAM,CAACM,GAAG,CAAEO,IAAI,CAAC,CAACS,IAAI,CAACC,SAAS,EAAI,CAChC,GAAIA,SAAS,CAAE,CACXZ,OAAO,CAACQ,GAAG,CAACP,GAAG,CACnB,CAAC,IAAM,CACHD,OAAO,CAACa,IAAI,CAACZ,GAAG,CACpB,CACJ,CAAC,CAAC,CAACa,KAAK,CAACP,KAAK,EAAI,CACdZ,GAAG,CAACG,GAAG,CAAC,OAAO,CAAES,KAAK,CAACQ,OAAO,CAAE,CAAE,GAAGR,KAAK,CAACL,IAAI,CAAEc,KAAK,CAAET,KAAK,CAACS,KAAM,CAAC,CAAC,CAEtE,GAAIT,KAAK,CAACU,SAAS,CAAE,CACjBjB,OAAO,CAACa,IAAI,CAACZ,GAAG,CACpB,CAAC,IAAM,CACHD,OAAO,CAACQ,GAAG,CAACP,GAAG,CACnB,CACJ,CAAC,CACL,CAAC,CAEL,CAAC,CAAE,CAAE,GAAGP,aAAa,CAAED,UAAU,CAAEyB,QAAQ,CAAE,IAAK,CAAC,CACvD,CAEAC,MAAM,CAACC,OAAO,CAAGhC,gBAAgB"}