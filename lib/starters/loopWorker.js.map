{"version":3,"sources":["../../src/starters/loopWorker.js"],"names":["sleep_","require","startWorker","startLoopWorker","worker","options","interval","workerOptions","app","module","exports"],"mappings":";;;;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,UAAD,CAA3B;;AAQA,eAAeE,eAAf,CAA+BC,MAA/B,EAAuCC,OAAvC,EAAgD;AAC5C,MAAI;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAiCF,OAArC;;AAEA,MAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACjCA,IAAAA,QAAQ,GAAG,IAAX;AACH;;AAED,SAAOJ,WAAW,CAAC,MAAOM,GAAP,IAAe;AAC9B,WAAO,IAAP,EAAa;AACT,YAAMJ,MAAM,CAACI,GAAD,CAAZ;AACA,YAAMR,MAAM,CAACM,QAAD,CAAZ;AACH;AACJ,GALiB,EAKfC,aALe,CAAlB;AAMH;;AAEDE,MAAM,CAACC,OAAP,GAAiBP,eAAjB","sourcesContent":["const { sleep_ } = require('@genx/july');\nconst startWorker = require('./worker');\n\n/**\n * \n * @param {Function} worker \n * @param {object} options \n * @property {integer} [options.interval=1000]\n */\nasync function startLoopWorker(worker, options) {\n    let { interval, ...workerOptions } = options;\n\n    if (typeof interval === 'undefined') {\n        interval = 1000;\n    }\n\n    return startWorker(async (app) => {             \n        while (true) {\n            await worker(app);\n            await sleep_(interval);\n        }            \n    }, workerOptions);\n}\n\nmodule.exports = startLoopWorker;"],"file":"loopWorker.js"}